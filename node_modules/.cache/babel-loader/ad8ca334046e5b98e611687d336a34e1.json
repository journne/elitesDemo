{"ast":null,"code":"import _slicedToArray from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,Fragment}from'react';import Breadcrumb from'../../../layout/breadcrumb';import{Container,Row,Col,Card,CardBody,CardHeader,Button}from'reactstrap';import{useSelector,useDispatch}from'react-redux';import{ADD_NEW_ITEM,REMOVE_ITEM,MARK_ALL_ITEMS,SELECTED_ITEM,WATCH_TODO_LIST}from'../../../redux/actionTypes';import{toast}from'react-toastify';import{ToDo,AddNewTask,AddTask,Close}from'../../../constant';var Todo=function Todo(props){var dispatch=useDispatch();var todoList=useSelector(function(content){return content.Todoapp.allTodoItems.filter(function(item){return item.isStatus!==\"deleted\";});});var _useState=useState(''),_useState2=_slicedToArray(_useState,2),addTask=_useState2[0],setAddTask=_useState2[1];// eslint-disable-next-line\nvar _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),border_danger=_useState4[0],setBorder_danger=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),task=_useState6[0],setTask=_useState6[1];var _useState7=useState('pending'),_useState8=_slicedToArray(_useState7,2),status=_useState8[0],setStatus=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),markAll=_useState10[0],setMarkAll=_useState10[1];useEffect(function(){dispatch({type:WATCH_TODO_LIST});},[dispatch]);var addNewTask=function addNewTask(){if(task===''){document.querySelector('.ng-valid').classList.remove('border-danger');document.querySelector('.ng-valid').classList.add('border-danger');}else{dispatch({type:ADD_NEW_ITEM,payload:task});setAddTask('');setTask('');document.getElementById('newtask').value='';document.querySelector('.ng-valid').classList.add('taskmag-hide');document.querySelector('.ng-valid').classList.remove('taskmag-show');document.querySelector('.add-task-btn').classList.remove('hide');}};var handleRemoveTodo=function handleRemoveTodo(todoId){dispatch({type:REMOVE_ITEM,payload:todoId});toast.success(\"Deleted Task !\");};var handleMarkedTodo=function handleMarkedTodo(itemId,itemStatus){if(itemStatus==='completed'){setStatus('pending');dispatch({type:SELECTED_ITEM,payload:{itemId:itemId,status:status}});toast.success(\"Task Completed !\");}else if(itemStatus==='pending'){setStatus('completed');dispatch({type:SELECTED_ITEM,payload:{itemId:itemId,status:status}});toast.error(\" Task In-completed !\");}};var markAllStatus=function markAllStatus(){setMarkAll(!markAll);if(markAll===true){toast.error(\"All Task In-Completed !\");}else{toast.success(\"All Task Completed !\");}dispatch({type:MARK_ALL_ITEMS,payload:markAll});};var openTaskWrapper=function openTaskWrapper(){setAddTask(' visible');document.querySelector('.add-task-btn').classList.add('hide');};var closeTaskWrapper=function closeTaskWrapper(){setAddTask('');document.querySelector('.add-task-btn').classList.remove('hide');};var onTaskChanged=function onTaskChanged(e){setTask({task:e.currentTarget.value});};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Apps\",title:\"To-Do\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,ToDo)),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mark-all-tasks\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mark-all-tasks-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"mark-all-btn\",id:\"mark-all-finished\",role:\"button\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as finished\"),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box completed\",onClick:markAllStatus},markAll&&/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"})))),/*#__PURE__*/React.createElement(\"span\",{className:\"mark-all-btn move-down\",id:\"mark-all-incomplete\",role:\"button\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as Incomplete\"),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-body\"},/*#__PURE__*/React.createElement(\"ul\",{id:\"todo-list\"},todoList.length>0?todoList.map(function(todo,index){return/*#__PURE__*/React.createElement(\"li\",{className:\"task \"+todo.status,key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"task-container\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"task-label\"},todo.title),/*#__PURE__*/React.createElement(\"span\",{className:\"task-action-btn\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\",onClick:function onClick(){return handleRemoveTodo(todo.id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-trash\"}))),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\",onClick:function onClick(){return handleMarkedTodo(todo.id,status);}},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"}))))));}):'')),/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-footer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-btn-wrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"add-task-btn\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:openTaskWrapper},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-plus\"}),\" \",AddNewTask))),/*#__PURE__*/React.createElement(\"div\",{className:\"new-task-wrapper\"+addTask},/*#__PURE__*/React.createElement(\"textarea\",{className:\"ng-untouched ng-pristine ng-valid\"+border_danger,id:\"newtask\",placeholder:\"Enter new task here. . .\",defaultValue:task,onChange:onTaskChanged}),/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"cancel-btn\",id:\"close-task-panel\",onClick:closeTaskWrapper},Close),/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"ml-3 add-new-task-btn\",id:\"add-task\",onClick:addNewTask},AddTask))))),/*#__PURE__*/React.createElement(\"div\",{className:\"notification-popup hide\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"task\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"notification-text\"}))))))))));};export default Todo;","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/application/todo-app/index.jsx"],"names":["React","useState","useEffect","Fragment","Breadcrumb","Container","Row","Col","Card","CardBody","CardHeader","Button","useSelector","useDispatch","ADD_NEW_ITEM","REMOVE_ITEM","MARK_ALL_ITEMS","SELECTED_ITEM","WATCH_TODO_LIST","toast","ToDo","AddNewTask","AddTask","Close","Todo","props","dispatch","todoList","content","Todoapp","allTodoItems","filter","item","isStatus","addTask","setAddTask","border_danger","setBorder_danger","task","setTask","status","setStatus","markAll","setMarkAll","type","addNewTask","document","querySelector","classList","remove","add","payload","getElementById","value","handleRemoveTodo","todoId","success","handleMarkedTodo","itemId","itemStatus","error","markAllStatus","openTaskWrapper","closeTaskWrapper","onTaskChanged","e","currentTarget","length","map","todo","index","title","id"],"mappings":"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","sourcesContent":["import React,{useState,useEffect, Fragment} from 'react';\nimport Breadcrumb from '../../../layout/breadcrumb'\nimport {Container,Row,Col,Card,CardBody,CardHeader,Button} from 'reactstrap'\nimport {useSelector,useDispatch} from 'react-redux'\nimport {ADD_NEW_ITEM,REMOVE_ITEM,MARK_ALL_ITEMS,SELECTED_ITEM,WATCH_TODO_LIST} from '../../../redux/actionTypes'\nimport { toast } from 'react-toastify';\nimport {ToDo, AddNewTask,AddTask,Close} from '../../../constant'\n\nconst Todo = (props) =>  {\n    const dispatch = useDispatch();\n    const todoList = useSelector(content => content.Todoapp.allTodoItems.filter((item) => item.isStatus !== \"deleted\"));\n    const [addTask, setAddTask] = useState('');\n    // eslint-disable-next-line\n    const [border_danger, setBorder_danger] = useState('');\n    const [task, setTask] = useState('');\n    const [status, setStatus] = useState('pending')\n    const [markAll, setMarkAll] = useState(false);\n    \n    useEffect(() => {\n        dispatch({ type: WATCH_TODO_LIST });\n    },[dispatch]);\n\n    const addNewTask = () => {\n      if (task === '') {\n          document.querySelector('.ng-valid').classList.remove('border-danger')\n          document.querySelector('.ng-valid').classList.add('border-danger')\n      } else {\n          dispatch({ type: ADD_NEW_ITEM, payload: task })\n          setAddTask('')\n          setTask('')\n          document.getElementById('newtask').value = '';\n          document.querySelector('.ng-valid').classList.add('taskmag-hide')\n          document.querySelector('.ng-valid').classList.remove('taskmag-show')\n          document.querySelector('.add-task-btn').classList.remove('hide')\n      }\n    }\n    const handleRemoveTodo = (todoId) => {\n      dispatch({ type: REMOVE_ITEM, payload: todoId });\n      toast.success(\"Deleted Task !\");\n    }\n    const handleMarkedTodo = (itemId, itemStatus) => {\n      if (itemStatus === 'completed') {\n          setStatus('pending')\n          dispatch({ type: SELECTED_ITEM, payload: { itemId, status } });\n          toast.success(\"Task Completed !\");\n      }\n      else if (itemStatus === 'pending') {\n          setStatus('completed')\n          dispatch({ type: SELECTED_ITEM, payload: { itemId, status } });\n          toast.error(\" Task In-completed !\");\n      }\n    }\n    const markAllStatus = () => {\n      setMarkAll(!markAll);\n      if(markAll === true){\n          toast.error(\"All Task In-Completed !\");\n      }else{\n          toast.success(\"All Task Completed !\");\n      }\n      dispatch({ type: MARK_ALL_ITEMS, payload: markAll })\n    }\n\n    const openTaskWrapper = () => {\n      setAddTask(' visible')\n      document.querySelector('.add-task-btn').classList.add('hide')\n    }\n\n    const closeTaskWrapper = () => {\n      setAddTask('')\n      document.querySelector('.add-task-btn').classList.remove('hide')\n    }\n\n    const onTaskChanged = (e) => {\n      setTask({\n          task: e.currentTarget.value\n      });\n    }\n  \n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Apps\" title=\"To-Do\"/>\n        <Container fluid={true}>\n        <Row>\n          <Col xl=\"12\">\n            <Card>\n              <CardHeader>\n                <h5>{ToDo}</h5>\n              </CardHeader>\n              <CardBody>\n                <div className=\"todo\">\n                  <div className=\"todo-list-wrapper\">\n                    <div className=\"todo-list-container\">\n                      <div className=\"mark-all-tasks\">\n                        <div className=\"mark-all-tasks-container\">\n                          <span className=\"mark-all-btn\" id=\"mark-all-finished\" role=\"button\">\n                            <span className=\"btn-label\">{\"Mark all as finished\"}</span>\n                            <span className=\"action-box completed\" onClick={markAllStatus}>\n                                {markAll &&\n                                    <i className=\"icon\"><i className=\"icon-check\"></i></i>}\n                            </span>\n                            </span>\n                            <span className=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\">\n                              <span className=\"btn-label\">{\"Mark all as Incomplete\"}</span>\n                              <span className=\"action-box\"><i className=\"icon\"><i className=\"icon-check\"></i></i>\n                              </span>\n                            </span>\n                        </div>\n                      </div>\n                      <div className=\"todo-list-body\">\n                        <ul id=\"todo-list\">\n                        {todoList.length > 0 ?\n                            todoList.map((todo, index) =>\n                            <li className={\"task \" + todo.status} key={index} >\n                                <div className=\"task-container\">\n                                    <h4 className=\"task-label\">{todo.title}</h4>\n                                    <span className=\"task-action-btn\">\n                                        <span className=\"action-box large delete-btn\" title=\"Delete Task\"  onClick={() => handleRemoveTodo(todo.id)} >\n                                            <i className=\"icon\"><i className=\"icon-trash\"></i></i></span>\n                                        <span className=\"action-box large complete-btn\" title=\"Mark Complete\" onClick={() => handleMarkedTodo(todo.id, status)} >\n                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                        </span>\n                                    </span>\n                                </div>\n                            </li>\n                            ) : ''}  \n                        </ul>\n                      </div>\n                      <div className=\"todo-list-footer\">\n                        <div className=\"add-task-btn-wrapper\"><span className=\"add-task-btn\">\n                            <Button color=\"primary\"  onClick={openTaskWrapper}>\n                              <i className=\"icon-plus\"></i> {AddNewTask}</Button></span>\n                        </div>\n                        <div className={\"new-task-wrapper\" + addTask}>\n                        <textarea\n                            className={\"ng-untouched ng-pristine ng-valid\" + border_danger}\n                            id=\"newtask\"\n                            placeholder=\"Enter new task here. . .\"\n                            defaultValue={task}\n                            onChange={onTaskChanged}\n                        >\n                        </textarea>\n                        <Button color=\"danger\" className=\"cancel-btn\" id=\"close-task-panel\" onClick={closeTaskWrapper}>{Close}</Button>\n                        <Button color=\"success\" className=\"ml-3 add-new-task-btn\" id=\"add-task\" onClick={addNewTask}>{AddTask}</Button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"notification-popup hide\">\n                    <p><span className=\"task\"></span><span className=\"notification-text\"></span></p>\n                  </div>\n                </div>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n      </Fragment>\n    );\n}\n\nexport default Todo;"]},"metadata":{},"sourceType":"module"}