{"ast":null,"code":"import _slicedToArray from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useCallback,useMemo}from'react';import Breadcrumb from'../../layout/breadcrumb';import differenceBy from'lodash/differenceBy';import{toast}from'react-toastify';import DataTable from'react-data-table-component';import{tableData}from'../../data/dummyTableData';import{Container,Row,Col,Card,CardHeader,CardBody}from'reactstrap';var DataTables=function DataTables(){var _useState=useState(tableData),_useState2=_slicedToArray(_useState,2),data=_useState2[0],setData=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),selectedRows=_useState4[0],setSelectedRows=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),toggleCleared=_useState6[0],setToggleCleared=_useState6[1];var tableColumns=[{name:'ID',selector:'id',sortable:true,center:true},{name:'Name',selector:'name',sortable:true,center:true},{name:'Status',selector:'status',sortable:true,center:true},{name:'Creat_on',selector:'creat_on',sortable:true,center:true}];var handleRowSelected=useCallback(function(state){setSelectedRows(state.selectedRows);},[]);var contextActions=useMemo(function(){var handleDelete=function handleDelete(){if(window.confirm(\"Are you sure you want to delete:\\r \".concat(selectedRows.map(function(r){return r.name;}),\"?\"))){setToggleCleared(!toggleCleared);setData(differenceBy(data,selectedRows,'name'));toast.success(\"Successfully Deleted !\");}};return/*#__PURE__*/React.createElement(\"button\",{key:\"delete\",className:\"btn btn-danger\",onClick:handleDelete},\"Delete\");},[data,selectedRows,toggleCleared]);return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Table\",title:\"Data Tables\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,\"Select Multiple and Delete Single Data\")),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(DataTable,{data:data,columns:tableColumns,striped:true,center:true,selectableRows:true,persistTableHead:true,contextActions:contextActions,onSelectedRowsChange:handleRowSelected,clearSelectedRows:toggleCleared})))))));};export default DataTables;","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/tables/dataTable.jsx"],"names":["React","Fragment","useState","useCallback","useMemo","Breadcrumb","differenceBy","toast","DataTable","tableData","Container","Row","Col","Card","CardHeader","CardBody","DataTables","data","setData","selectedRows","setSelectedRows","toggleCleared","setToggleCleared","tableColumns","name","selector","sortable","center","handleRowSelected","state","contextActions","handleDelete","window","confirm","map","r","success"],"mappings":"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","sourcesContent":["import React, { Fragment,useState,useCallback,useMemo} from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport differenceBy from 'lodash/differenceBy';\nimport { toast } from 'react-toastify';\nimport DataTable from 'react-data-table-component'\nimport {tableData} from '../../data/dummyTableData'\nimport { Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap';\n\nconst DataTables = () =>  {\n\n  const [data,setData] = useState(tableData)\n  const [selectedRows, setSelectedRows] = useState([]);\n  const [toggleCleared, setToggleCleared] = useState(false);\n\n  const tableColumns = [\n    {\n        name: 'ID',\n        selector: 'id', \n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Name',\n        selector: 'name',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Status',\n        selector: 'status',\n        sortable: true,\n        center:true,\n    },\n    {\n        name: 'Creat_on',\n        selector: 'creat_on',\n        sortable: true,\n        center:true,\n    },\n  ]\n\n  \n  const handleRowSelected = useCallback(state => {\n      setSelectedRows(state.selectedRows);\n    }, []);\n\n    const contextActions = useMemo(() => {\n      const handleDelete = () => {\n        \n        if (window.confirm(`Are you sure you want to delete:\\r ${selectedRows.map(r => r.name)}?`)) {\n          setToggleCleared(!toggleCleared);\n          setData(differenceBy(data, selectedRows, 'name'));\n          toast.success(\"Successfully Deleted !\")\n        }\n      };\n  \n      return <button key=\"delete\" className=\"btn btn-danger\" onClick={handleDelete}>Delete</button>;\n    }, [data, selectedRows, toggleCleared]);\n\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"Table\" title=\"Data Tables\"/>\n        <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>{\"Select Multiple and Delete Single Data\"}</h5>\n                            </CardHeader>\n                            <CardBody>\n                              <DataTable\n                                data={data}\n                                columns={tableColumns}\n                                striped={true}\n                                center={true}\n                                selectableRows\n                                persistTableHead\n                                contextActions={contextActions}\n                                onSelectedRowsChange={handleRowSelected}\n                                clearSelectedRows={toggleCleared}\n                              />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n\n};\n\nexport default DataTables;"]},"metadata":{},"sourceType":"module"}