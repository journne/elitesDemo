{"ast":null,"code":"import React from'react';import{Chart}from\"react-google-charts\";import configDB from'../../../data/customizer/config';var primary=localStorage.getItem('default_color')||configDB.data.color.primary_color;var secondary=localStorage.getItem('secondary_color')||configDB.data.color.secondary_color;export var GooglePieChart1=function GooglePieChart1(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',6.7],['Eat',13.3],['Commute',20],['Watch TV',26.7],['Sleep',33.3]],options:{title:'My Daily Activities',colors:[\"#a927f9\",primary,\"#51bb25\",\"#f8d62b\",secondary]},rootProps:{'data-testid':'1'}});};export var GooglePieChart2=function GooglePieChart2(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',6.7],['Eat',13.3],['Commute',20],['Watch TV',26.7],['Sleep',33.3]],options:{title:'My Daily Activities',colors:[\"#a927f9\",primary,\"#51bb25\",\"#f8d62b\",secondary],is3D:true},rootProps:{'data-testid':'2'}});};export var GoogleDonutChart=function GoogleDonutChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Task','Hours per Day'],['Work',11],['Eat',2],['Commute',2],['Watch TV',2],['Sleep',7]],options:{title:'My Daily Activities',colors:[\"#a927f9\",primary,\"#51bb25\",\"#f8d62b\",secondary,secondary],pieHole:0.4}});};export var GoogleRotatingPieChart1=function GoogleRotatingPieChart1(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Language','Speakers (in millions)'],['German',2.85],['French',1.66],['Italian',0.316],['Romansh',0.0791]],options:{legend:'none',pieSliceText:'label',title:'Swiss Language Use (100 degree rotation)',colors:[\"#a927f9\",primary,\"#51bb25\",\"#a927f9\",secondary],pieStartAngle:100},rootProps:{'data-testid':'4'}});};export var GoogleRotatingPieChart2=function GoogleRotatingPieChart2(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Language','Speakers (in millions)'],['Assamese',13],['Bengali',83],['Bodo',1.4],['Dogri',2.3],['Gujarati',46],['Hindi',300],['Kannada',38],['Kashmiri',5.5],['Konkani',5],['Maithili',20],['Malayalam',33],['Manipuri',1.5],['Marathi',72],['Nepali',2.9],['Oriya',33],['Punjabi',29],['Sanskrit',0.01],['Santhali',6.5],['Sindhi',2.5],['Tamil',61],['Telugu',74],['Urdu',52]],options:{title:'Indian Language Use',legend:'none',pieSliceText:'label',colors:[\"#a927f9\",primary,\"#fb740d\",secondary,\"#a927f9\",primary,\"#51bb25\",\"#a927f9\",\"#fb740d\",\"#a927f9\",primary,\"#51bb25\",\"#a927f9\",\"#51bb25\",primary,\"#51bb25\",\"#a927f9\",\"#fb740d\",\"#a927f9\",primary,primary,\"#ff9f40\"],slices:{4:{offset:0.2},12:{offset:0.3},14:{offset:0.4},15:{offset:0.5}}},rootProps:{'data-testid':'5'}});};export var GoogleSliceCharts=function GoogleSliceCharts(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"PieChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Pizza','Popularity'],['Pepperoni',33],['Hawaiian',26],['Mushroom',22],['Sausage',10],['Anchovies',9]],options:{title:'Popularity of Types of Pizza',colors:[primary,secondary,\"#51bb25\",\"#a927f9\",primary],sliceVisibilityThreshold:0.2},rootProps:{'data-testid':'7'}});};export var GoogleAreaChart=function GoogleAreaChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'300px',chartType:\"AreaChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses'],['2013',1000,400],['2014',1170,460],['2015',660,1120],['2016',1030,540]],options:{title:'Company Performance',hAxis:{title:'Year',titleTextStyle:{color:'#333'}},vAxis:{minValue:0},colors:[\"#a927f9\",primary],chartArea:{width:'50%',height:'70%'}},rootProps:{'data-testid':'1'}});};export var GoogleStackingChart=function GoogleStackingChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'300px',chartType:\"AreaChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses'],['2013',1000,400],['2014',1170,460],['2015',660,1120],['2016',1030,540]],options:{isStacked:true,height:300,legend:{position:'top',maxLines:3},vAxis:{minValue:0},colors:[\"#a927f9\",primary]},rootProps:{'data-testid':'2'}});};export var GoogleGhantChart=function GoogleGhantChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'300px',chartType:\"Gantt\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[[{type:'string',label:'Task ID'},{type:'string',label:'Task Name'},{type:'date',label:'Start Date'},{type:'date',label:'End Date'},{type:'number',label:'Duration'},{type:'number',label:'Percent Complete'},{type:'string',label:'Dependencies'}],['Research','Find sources',new Date(2015,0,1),new Date(2015,0,5),null,100,null],['Write','Write paper',null,new Date(2015,0,9),3*24*60*60*1000,25,'Research,Outline'],['Cite','Create bibliography',null,new Date(2015,0,7),1*24*60*60*1000,20,'Research'],['Complete','Hand in paper',null,new Date(2015,0,10),1*24*60*60*1000,0,'Cite,Write'],['Outline','Outline paper',null,new Date(2015,0,6),1*24*60*60*1000,100,'Research']],options:{gantt:{criticalPathEnabled:false,arrow:{angle:100,width:5,color:'#51bb25',radius:0},palette:[{\"color\":primary,\"dark\":secondary,\"light\":\"#047afb\"}]},backgroundColor:'transparent'},rootProps:{'data-testid':'1'}});};export var GoogleLineChart=function GoogleLineChart(){return/*#__PURE__*/React.createElement(Chart,{chartType:\"LineChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['month','Guardians of the Galaxy','The Avengers','Transformers: Age of Extinction'],[1,37.8,80.8,41.8],[2,30.9,10.5,32.4],[3,40.4,57,25.7],[4,11.7,18.8,10.5],[5,20,17.6,10.4],[6,8.8,13.6,7.7],[7,7.6,12.3,9.6],[8,12.3,29.2,10.6],[9,16.9,42.9,14.8],[10,12.8,30.9,11.6],[11,5.3,7.9,4.7],[12,6.6,8.4,5.2]],options:{chart:{title:'Box Office Earnings in First Two Weeks of Opening',subtitle:'in millions of dollars (USD)'},colors:[primary,secondary,\"#51bb25\"],height:350,width:'100%',backgroundColor:'transparent',chartArea:{left:0,top:0,bottom:0}},rootProps:{'data-testid':'2'}});};export var GoogleBasicbarChart=function GoogleBasicbarChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"BarChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['City','2010 Population','2000 Population'],['New York City, NY',8175000,8008000],['Los Angeles, CA',3792000,3694000],['Chicago, IL',2695000,2896000],['Houston, TX',2099000,1953000],['Philadelphia, PA',1526000,1517000]],options:{title:'Population of Largest U.S. Cities',chartArea:{width:'50%'},colors:[primary,secondary],backgroundColor:'transparent',hAxis:{title:'Total Population',minValue:0},vAxis:{title:'City'}},rootProps:{'data-testid':'1'}});};export var GoogleMaterialDesignChart=function GoogleMaterialDesignChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"Bar\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Year','Sales','Expenses','Profit'],['2014',1000,400,200],['2015',1170,460,250],['2016',660,1120,300],['2017',1030,540,350]],options:{colors:[primary,secondary,\"#51bb25\"],chart:{title:'Company Performance',subtitle:'Sales, Expenses, and Profit: 2014-2017'}},rootProps:{'data-testid':'2'}});};export var GoogleComboChart=function GoogleComboChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'300px',chartType:\"ComboChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Month','Bolivia','Ecuador','Madagascar','Papua New Guinea','Rwanda','Average'],['2004/05',165,938,522,998,450,614.6],['2005/06',135,1120,599,1268,288,682],['2006/07',157,1167,587,807,397,623],['2007/08',139,1110,615,968,215,609.4],['2008/09',136,691,629,1026,366,569.6]],options:{title:'Monthly Coffee Production by Country',vAxis:{title:'Cups'},hAxis:{title:'Month'},seriesType:'bars',colors:[primary,\"#51bb25\",secondary,\"#a927f9\",\"#f8d62b\"],series:{5:{type:'line'}},backgroundColor:'transparent'},rootProps:{'data-testid':'1'}});};export var GoogleBarChart2=function GoogleBarChart2(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"BarChart\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Element','Density',{role:'style'},{sourceColumn:1,role:'annotation',type:'string',calc:'stringify'}],[\"Copper\",10,\"#a927f9\",10],[\"Silver\",12,\"#f8d62b\",12],[\"Gold\",14,secondary,14],[\"Platinum\",16,primary,16]],options:{title:'Density of Precious Metals, in g/cm^3',height:400,bar:{groupWidth:'95%'},backgroundColor:'transparent',legend:{position:'none'}}});};export var GoogleTreeChart=function GoogleTreeChart(){return/*#__PURE__*/React.createElement(Chart,{width:'100%',height:'400px',chartType:\"WordTree\",loader:/*#__PURE__*/React.createElement(\"div\",null,\"Loading Chart\"),data:[['Phrases'],['cats are better than dogs'],['cats eat kibble'],['cats are better than hamsters'],['cats are awesome'],['cats are people too'],['cats eat mice'],['cats meowing'],['cats in the cradle'],['cats eat mice'],['cats in the cradle lyrics'],['cats eat kibble'],['cats for adoption'],['cats are family'],['cats eat mice'],['cats are better than kittens'],['cats are evil'],['cats are weird'],['cats eat mice']],options:{wordtree:{format:'implicit',word:'cats',backgroundColor:'transparent'}},rootProps:{'data-testid':'1'}});};","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/charts/googleCharts/googlechartData.jsx"],"names":["React","Chart","configDB","primary","localStorage","getItem","data","color","primary_color","secondary","secondary_color","GooglePieChart1","title","colors","GooglePieChart2","is3D","GoogleDonutChart","pieHole","GoogleRotatingPieChart1","legend","pieSliceText","pieStartAngle","GoogleRotatingPieChart2","slices","offset","GoogleSliceCharts","sliceVisibilityThreshold","GoogleAreaChart","hAxis","titleTextStyle","vAxis","minValue","chartArea","width","height","GoogleStackingChart","isStacked","position","maxLines","GoogleGhantChart","type","label","Date","gantt","criticalPathEnabled","arrow","angle","radius","palette","backgroundColor","GoogleLineChart","chart","subtitle","left","top","bottom","GoogleBasicbarChart","GoogleMaterialDesignChart","GoogleComboChart","seriesType","series","GoogleBarChart2","role","sourceColumn","calc","bar","groupWidth","GoogleTreeChart","wordtree","format","word"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Chart } from \"react-google-charts\";\nimport configDB from '../../../data/customizer/config'\nconst primary = localStorage.getItem('default_color') || configDB.data.color.primary_color;\nconst secondary = localStorage.getItem('secondary_color') || configDB.data.color.secondary_color;\n\n\nexport const GooglePieChart1 = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Task', 'Hours per Day'],\n                ['Work', 6.7],\n                ['Eat', 13.3],\n                ['Commute', 20],\n                ['Watch TV', 26.7],\n                ['Sleep', 33.3],\n            ]}\n            options={{\n                title: 'My Daily Activities',\n                colors: [\"#a927f9\", primary, \"#51bb25\", \"#f8d62b\", secondary]\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    );\n}\n\nexport const GooglePieChart2 = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Task', 'Hours per Day'],\n                ['Work', 6.7],\n                ['Eat', 13.3],\n                ['Commute', 20],\n                ['Watch TV', 26.7],\n                ['Sleep', 33.3],\n            ]}\n            options={{\n                title: 'My Daily Activities',\n                colors: [\"#a927f9\", primary, \"#51bb25\", \"#f8d62b\", secondary],\n                is3D: true,\n            }}\n            rootProps={{ 'data-testid': '2' }}\n        />\n    )\n}\n\nexport const GoogleDonutChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Task', 'Hours per Day'],\n                ['Work', 11],\n                ['Eat', 2],\n                ['Commute', 2],\n                ['Watch TV', 2],\n                ['Sleep', 7],\n            ]}\n            options={{\n                title: 'My Daily Activities',\n                colors: [\"#a927f9\", primary, \"#51bb25\", \"#f8d62b\", secondary, secondary],\n                pieHole: 0.4,\n            }}\n        />\n\n    )\n}\n\nexport const GoogleRotatingPieChart1 = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Language', 'Speakers (in millions)'],\n                ['German', 2.85],\n                ['French', 1.66],\n                ['Italian', 0.316],\n                ['Romansh', 0.0791],\n            ]}\n            options={{\n                legend: 'none',\n                pieSliceText: 'label',\n                title: 'Swiss Language Use (100 degree rotation)',\n                colors: [\"#a927f9\", primary, \"#51bb25\", \"#a927f9\", secondary],\n                pieStartAngle: 100,\n            }}\n            rootProps={{ 'data-testid': '4' }}\n        />\n    )\n}\nexport const GoogleRotatingPieChart2 = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Language', 'Speakers (in millions)'],\n                ['Assamese', 13],\n                ['Bengali', 83],\n                ['Bodo', 1.4],\n                ['Dogri', 2.3],\n                ['Gujarati', 46],\n                ['Hindi', 300],\n                ['Kannada', 38],\n                ['Kashmiri', 5.5],\n                ['Konkani', 5],\n                ['Maithili', 20],\n                ['Malayalam', 33],\n                ['Manipuri', 1.5],\n                ['Marathi', 72],\n                ['Nepali', 2.9],\n                ['Oriya', 33],\n                ['Punjabi', 29],\n                ['Sanskrit', 0.01],\n                ['Santhali', 6.5],\n                ['Sindhi', 2.5],\n                ['Tamil', 61],\n                ['Telugu', 74],\n                ['Urdu', 52],\n            ]}\n            options={{\n                title: 'Indian Language Use',\n                legend: 'none',\n                pieSliceText: 'label',\n                colors: [\"#a927f9\", primary, \"#fb740d\", secondary, \"#a927f9\", primary, \"#51bb25\", \"#a927f9\", \"#fb740d\", \"#a927f9\", primary, \"#51bb25\", \"#a927f9\", \"#51bb25\", primary, \"#51bb25\", \"#a927f9\", \"#fb740d\", \"#a927f9\", primary, primary, \"#ff9f40\"],\n                slices: {\n                    4: { offset: 0.2 },\n                    12: { offset: 0.3 },\n                    14: { offset: 0.4 },\n                    15: { offset: 0.5 },\n                },\n            }}\n            rootProps={{ 'data-testid': '5' }}\n        />\n    )\n}\nexport const GoogleSliceCharts = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"PieChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Pizza', 'Popularity'],\n                ['Pepperoni', 33],\n                ['Hawaiian', 26],\n                ['Mushroom', 22],\n                ['Sausage', 10],\n                ['Anchovies', 9],\n            ]}\n            options={{\n                title: 'Popularity of Types of Pizza',\n                colors: [primary, secondary, \"#51bb25\", \"#a927f9\", primary],\n                sliceVisibilityThreshold: 0.2,\n            }}\n            rootProps={{ 'data-testid': '7' }}\n        />\n    )\n}\nexport const GoogleAreaChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'300px'}\n            chartType=\"AreaChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Year', 'Sales', 'Expenses'],\n                ['2013', 1000, 400],\n                ['2014', 1170, 460],\n                ['2015', 660, 1120],\n                ['2016', 1030, 540],\n            ]}\n            options={{\n                title: 'Company Performance',\n                hAxis: { title: 'Year', titleTextStyle: { color: '#333' } },\n                vAxis: { minValue: 0 },\n                colors: [\"#a927f9\", primary],\n                chartArea: { width: '50%', height: '70%' },\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    )\n\n}\nexport const GoogleStackingChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'300px'}\n            chartType=\"AreaChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Year', 'Sales', 'Expenses'],\n                ['2013', 1000, 400],\n                ['2014', 1170, 460],\n                ['2015', 660, 1120],\n                ['2016', 1030, 540],\n            ]}\n            options={{\n                isStacked: true,\n                height: 300,\n                legend: { position: 'top', maxLines: 3 },\n                vAxis: { minValue: 0 },\n                colors: [\"#a927f9\", primary],\n            }}\n            rootProps={{ 'data-testid': '2' }}\n        />\n    )\n}\n\nexport const GoogleGhantChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'300px'}\n            chartType=\"Gantt\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                [\n                    { type: 'string', label: 'Task ID' },\n                    { type: 'string', label: 'Task Name' },\n                    { type: 'date', label: 'Start Date' },\n                    { type: 'date', label: 'End Date' },\n                    { type: 'number', label: 'Duration' },\n                    { type: 'number', label: 'Percent Complete' },\n                    { type: 'string', label: 'Dependencies' },\n                ],\n                [\n                    'Research',\n                    'Find sources',\n                    new Date(2015, 0, 1),\n                    new Date(2015, 0, 5),\n                    null,\n                    100,\n                    null,\n                ],\n                [\n                    'Write',\n                    'Write paper',\n                    null,\n                    new Date(2015, 0, 9),\n                    3 * 24 * 60 * 60 * 1000,\n                    25,\n                    'Research,Outline',\n                ],\n                [\n                    'Cite',\n                    'Create bibliography',\n                    null,\n                    new Date(2015, 0, 7),\n                    1 * 24 * 60 * 60 * 1000,\n                    20,\n                    'Research',\n                ],\n                [\n                    'Complete',\n                    'Hand in paper',\n                    null,\n                    new Date(2015, 0, 10),\n                    1 * 24 * 60 * 60 * 1000,\n                    0,\n                    'Cite,Write',\n                ],\n                [\n                    'Outline',\n                    'Outline paper',\n                    null,\n                    new Date(2015, 0, 6),\n                    1 * 24 * 60 * 60 * 1000,\n                    100,\n                    'Research',\n                ],\n            ]}\n            options={{\n                gantt: {\n                    criticalPathEnabled: false,\n                    arrow: {\n                        angle: 100,\n                        width: 5,\n                        color: '#51bb25',\n                        radius: 0\n                    },\n\n                    palette: [\n                        {\n                            \"color\": primary,\n                            \"dark\": secondary,\n                            \"light\": \"#047afb\"\n                        }\n                    ]\n\n                },\n                backgroundColor: 'transparent',\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    )\n}\n\nexport const GoogleLineChart = () => {\n    return (\n        <Chart\n            chartType=\"LineChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['month', 'Guardians of the Galaxy', 'The Avengers', 'Transformers: Age of Extinction'],\n                [1, 37.8, 80.8, 41.8],\n                [2, 30.9, 10.5, 32.4],\n                [3, 40.4, 57, 25.7],\n                [4, 11.7, 18.8, 10.5],\n                [5, 20, 17.6, 10.4],\n                [6, 8.8, 13.6, 7.7],\n                [7, 7.6, 12.3, 9.6],\n                [8, 12.3, 29.2, 10.6],\n                [9, 16.9, 42.9, 14.8],\n                [10, 12.8, 30.9, 11.6],\n                [11, 5.3, 7.9, 4.7],\n                [12, 6.6, 8.4, 5.2],\n            ]}\n            options={{\n                chart: {\n                    title: 'Box Office Earnings in First Two Weeks of Opening',\n                    subtitle: 'in millions of dollars (USD)'\n                },\n                colors: [primary, secondary, \"#51bb25\"],\n                height: 350,\n                width: '100%',\n                backgroundColor: 'transparent',\n                chartArea: {\n                    left: 0,\n                    top: 0,\n                    bottom: 0\n                }\n            }}\n            rootProps={{ 'data-testid': '2' }}\n        />\n    )\n}\n\nexport const GoogleBasicbarChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"BarChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['City', '2010 Population', '2000 Population'],\n                ['New York City, NY', 8175000, 8008000],\n                ['Los Angeles, CA', 3792000, 3694000],\n                ['Chicago, IL', 2695000, 2896000],\n                ['Houston, TX', 2099000, 1953000],\n                ['Philadelphia, PA', 1526000, 1517000],\n            ]}\n            options={{\n                title: 'Population of Largest U.S. Cities',\n                chartArea: { width: '50%' },\n                colors: [primary, secondary],\n                backgroundColor: 'transparent',\n                hAxis: {\n                    title: 'Total Population',\n                    minValue: 0,\n                },\n                vAxis: {\n                    title: 'City',\n                },\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    )\n}\n\nexport const GoogleMaterialDesignChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"Bar\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Year', 'Sales', 'Expenses', 'Profit'],\n                ['2014', 1000, 400, 200],\n                ['2015', 1170, 460, 250],\n                ['2016', 660, 1120, 300],\n                ['2017', 1030, 540, 350],\n            ]}\n            options={{\n                colors: [primary, secondary, \"#51bb25\"],\n                chart: {\n                    title: 'Company Performance',\n                    subtitle: 'Sales, Expenses, and Profit: 2014-2017',\n                },\n            }}\n            rootProps={{ 'data-testid': '2' }}\n        />\n    )\n}\n\nexport const GoogleComboChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'300px'}\n            chartType=\"ComboChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                [\n                    'Month',\n                    'Bolivia',\n                    'Ecuador',\n                    'Madagascar',\n                    'Papua New Guinea',\n                    'Rwanda',\n                    'Average',\n                ],\n                ['2004/05', 165, 938, 522, 998, 450, 614.6],\n                ['2005/06', 135, 1120, 599, 1268, 288, 682],\n                ['2006/07', 157, 1167, 587, 807, 397, 623],\n                ['2007/08', 139, 1110, 615, 968, 215, 609.4],\n                ['2008/09', 136, 691, 629, 1026, 366, 569.6],\n            ]}\n            options={{\n                title: 'Monthly Coffee Production by Country',\n                vAxis: { title: 'Cups' },\n                hAxis: { title: 'Month' },\n                seriesType: 'bars',\n                colors: [primary, \"#51bb25\", secondary, \"#a927f9\", \"#f8d62b\"],\n                series: { 5: { type: 'line' } },\n                backgroundColor: 'transparent',\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    )\n}\n\nexport const GoogleBarChart2 = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"BarChart\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                [\n                    'Element',\n                    'Density',\n                    { role: 'style' },\n                    {\n                        sourceColumn: 1,\n                        role: 'annotation',\n                        type: 'string',\n                        calc: 'stringify',\n                    },\n                ],\n                [\"Copper\", 10, \"#a927f9\", 10],\n                [\"Silver\", 12, \"#f8d62b\", 12],\n                [\"Gold\", 14, secondary, 14],\n                [\"Platinum\", 16, primary, 16]\n            ]}\n            options={{\n                title: 'Density of Precious Metals, in g/cm^3',\n                height: 400,\n                bar: { groupWidth: '95%' },\n                backgroundColor: 'transparent',\n                legend: { position: 'none' },\n            }}\n        />\n    )\n}\n\nexport const GoogleTreeChart = () => {\n    return (\n        <Chart\n            width={'100%'}\n            height={'400px'}\n            chartType=\"WordTree\"\n            loader={<div>{\"Loading Chart\"}</div>}\n            data={[\n                ['Phrases'],\n                ['cats are better than dogs'],\n                ['cats eat kibble'],\n                ['cats are better than hamsters'],\n                ['cats are awesome'],\n                ['cats are people too'],\n                ['cats eat mice'],\n                ['cats meowing'],\n                ['cats in the cradle'],\n                ['cats eat mice'],\n                ['cats in the cradle lyrics'],\n                ['cats eat kibble'],\n                ['cats for adoption'],\n                ['cats are family'],\n                ['cats eat mice'],\n                ['cats are better than kittens'],\n                ['cats are evil'],\n                ['cats are weird'],\n                ['cats eat mice'],\n            ]}\n            options={{\n                wordtree: {\n                    format: 'implicit',\n                    word: 'cats',\n                    backgroundColor: 'transparent',\n                },\n            }}\n            rootProps={{ 'data-testid': '1' }}\n        />\n    )\n}"]},"metadata":{},"sourceType":"module"}