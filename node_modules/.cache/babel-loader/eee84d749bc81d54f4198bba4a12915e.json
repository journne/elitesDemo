{"ast":null,"code":"var _jsxFileName = \"/Users/tola/Downloads/Elites/elitesDemo/src/components/plans/plansCreate.jsx\";\nimport React, { Fragment, useState, useEffect } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb';\nimport Dropzone from 'react-dropzone-uploader';\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport { Container, Row, Col, Card, CardBody, CardHeader, Form, FormGroup, Label, Input, Button } from 'reactstrap';\nimport DatePicker from \"react-datepicker\";\nimport { useForm } from 'react-hook-form';\nimport { addRecipe } from '../../redux/recipes/action';\nimport { useDispatch } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\nimport { MealName, Duration, StartingDate, EndingDate, Add, Cancel, Done, Doing } from '../../constant';\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { MDEEditorExample } from \"../../constant\";\n\nconst Plans = props => {\n  const [text, setText] = useState(`Enter text in the area on the left. For more info, click the ? (help) icon in the menu.`);\n\n  const handleChange = () => {\n    setText(\"Enter text in the area on the left. For more info, click the ? (help) icon in the menu.\");\n  };\n\n  const dispatch = useDispatch();\n  const {\n    register,\n    handleSubmit,\n    errors\n  } = useForm();\n  const [startDate, setstartDate] = useState(new Date());\n  const [endDate, setendDate] = useState(new Date());\n\n  const handleStartDate = date => {\n    setstartDate(date);\n  };\n\n  const handleEndDate = date => {\n    setendDate(date);\n  };\n\n  const getUploadParams = ({\n    meta\n  }) => {\n    return {\n      url: 'https://httpbin.org/post'\n    };\n  }; // called every time a file's `status` changes\n\n\n  const handleChangeStatus = ({\n    meta,\n    file\n  }, status) => {};\n\n  const AddRecipe = data => {\n    if (data !== '') {\n      dispatch(addRecipe(data));\n      props.history.push(`${process.env.PUBLIC_URL}/app/project/project-list`);\n    } else {\n      errors.showMessages();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Breadcrumb, {\n    parent: \"meals\",\n    title: \"Create Recipe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"theme-form\",\n    onSubmit: handleSubmit(AddRecipe),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }, \"Plan\"), /*#__PURE__*/React.createElement(Input, {\n    className: \"form-control\",\n    type: \"text\",\n    name: \"title\",\n    placeholder: \"Project name *\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 29\n    }\n  }, errors.title && 'Title is required')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, \"Lifestyle\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"status\",\n    placeholder: \"Select Status\",\n    className: \"form-control digits\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Yes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 31\n    }\n  }, Done), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"No\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 31\n    }\n  }, Doing))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 29\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    className: \"form-control\",\n    name: \"description\",\n    rows: \"3\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 29\n    }\n  }, errors.description && 'Some Details is required')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, \"Price per Serving\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    className: \"form-control\",\n    name: \"description\",\n    rows: \"3\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, errors.description && 'Some Details is required')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  }, \"Recipe per Week\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"textarea\",\n    className: \"form-control\",\n    name: \"description\",\n    rows: \"3\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      color: \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, errors.description && 'Some Details is required')))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: \"4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, \"Preference\"), /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    name: \"status\",\n    placeholder: \"Select Status\",\n    className: \"form-control digits\",\n    innerRef: register({\n      required: true\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Fresh\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 31\n    }\n  }, Done), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"Cooked\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 31\n    }\n  }, Doing))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }\n  }, \"Upload Image File\"), /*#__PURE__*/React.createElement(Dropzone, {\n    getUploadParams: getUploadParams,\n    onChangeStatus: handleChangeStatus,\n    maxFiles: 1,\n    multiple: false,\n    canCancel: false,\n    inputContent: \"Drop A File\",\n    styles: {\n      dropzone: {\n        width: '100%',\n        height: 50\n      },\n      dropzoneActive: {\n        borderColor: 'green'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 33\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"success\",\n    className: \"mr-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 31\n    }\n  }, Add), /*#__PURE__*/React.createElement(Link, {\n    to: `${process.env.PUBLIC_URL}/app/project/project-list`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 31\n    }\n  }, Cancel))))))))))));\n};\n\nexport default withRouter(Plans);","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/plans/plansCreate.jsx"],"names":["React","Fragment","useState","useEffect","Breadcrumb","Dropzone","Typeahead","Container","Row","Col","Card","CardBody","CardHeader","Form","FormGroup","Label","Input","Button","DatePicker","useForm","addRecipe","useDispatch","withRouter","Link","MealName","Duration","StartingDate","EndingDate","Add","Cancel","Done","Doing","SimpleMDE","MDEEditorExample","Plans","props","text","setText","handleChange","dispatch","register","handleSubmit","errors","startDate","setstartDate","Date","endDate","setendDate","handleStartDate","date","handleEndDate","getUploadParams","meta","url","handleChangeStatus","file","status","AddRecipe","data","history","push","process","env","PUBLIC_URL","showMessages","required","color","title","description","dropzone","width","height","dropzoneActive","borderColor"],"mappings":"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","sourcesContent":["import React, { Fragment,useState,useEffect } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport Dropzone from 'react-dropzone-uploader'\nimport { Typeahead } from 'react-bootstrap-typeahead';\nimport {Container,Row,Col,Card,CardBody,CardHeader,Form,FormGroup,Label,Input,Button} from 'reactstrap'\nimport DatePicker from \"react-datepicker\";\nimport {useForm} from 'react-hook-form'\nimport {addRecipe} from '../../redux/recipes/action'\nimport { useDispatch } from 'react-redux';\nimport {withRouter,Link} from 'react-router-dom'\nimport {MealName,Duration,StartingDate,EndingDate,Add,Cancel,Done,Doing } from '../../constant'\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { MDEEditorExample } from \"../../constant\";\n\n\nconst Plans = (props) => {\n\nconst [text,setText] = useState(`Enter text in the area on the left. For more info, click the ? (help) icon in the menu.`)\n    const handleChange = () => {\n        setText(\"Enter text in the area on the left. For more info, click the ? (help) icon in the menu.\")\n    }\n\n    const dispatch = useDispatch()\n    const { register, handleSubmit, errors } = useForm();\n    const [startDate, setstartDate] = useState(new Date())\n    const [endDate, setendDate] = useState(new Date())\n\n    const handleStartDate = date => {\n      setstartDate(date);\n    };\n\n    const handleEndDate = date => {\n      setendDate(date);\n    };\n    \n    const getUploadParams = ({ meta }) => { \n        return { \n          url: 'https://httpbin.org/post' \n        }\n    }\n    \n\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => { }\n\n    const AddRecipe = data => {\n      if (data !== '') {\n        dispatch(addRecipe(data))\n        props.history.push(`${process.env.PUBLIC_URL}/app/project/project-list`)\n      } else {\n        errors.showMessages();\n      }\n    };\n\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"meals\" title=\"Create Recipe\" /> \n        <Container fluid={true}>\n            <Row>\n              <Col sm=\"4\">\n                <Card>\n                  <CardBody>\n                    <Form className=\"theme-form\" onSubmit={handleSubmit(AddRecipe)}>\n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Plan</Label>\n                            <Input className=\"form-control\" type=\"text\"  name=\"title\" placeholder=\"Project name *\" innerRef={register({ required: true })} />\n                            <span style={{ color: \"red\" }}>{errors.title && 'Title is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Lifestyle</Label>\n                            <Input type=\"select\" name=\"status\" placeholder=\"Select Status\" className=\"form-control digits\" innerRef={register({ required: true })}>\n                              <option value=\"Yes\">{Done}</option>\n                              <option value=\"No\">{Doing}</option>\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                     \n                  \n                    \n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Description</Label>\n                            <Input  type=\"textarea\" className=\"form-control\" name=\"description\" rows=\"3\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.description && 'Some Details is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Price per Serving</Label>\n                            <Input  type=\"textarea\" className=\"form-control\" name=\"description\" rows=\"3\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.description && 'Some Details is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Recipe per Week</Label>\n                            <Input  type=\"textarea\" className=\"form-control\" name=\"description\" rows=\"3\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.description && 'Some Details is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Preference</Label>\n                            <Input type=\"select\" name=\"status\" placeholder=\"Select Status\" className=\"form-control digits\" innerRef={register({ required: true })}>\n                              <option value=\"Fresh\">{Done}</option>\n                              <option value=\"Cooked\">{Doing}</option>\n                            </Input>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Upload Image File</Label>\n                                <Dropzone\n                                    getUploadParams={getUploadParams}\n                                    onChangeStatus={handleChangeStatus}\n                                    maxFiles={1}\n                                    multiple={false}\n                                    canCancel={false}\n                                    inputContent=\"Drop A File\"\n                                    styles={{\n                                        dropzone: { width: '100%', height: 50 },\n                                        dropzoneActive: { borderColor: 'green' },\n                                    }}\n                                />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <FormGroup className=\"mb-0\">\n                              <Button color=\"success\" className=\"mr-3\">{Add}</Button>\n                              <Link to={`${process.env.PUBLIC_URL}/app/project/project-list`}>\n                              <Button color=\"danger\">{Cancel}</Button>\n                              </Link>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Plans);"]},"metadata":{},"sourceType":"module"}