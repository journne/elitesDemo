{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchTaskAsyn),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(watcherTaskApp);import{call,put,takeLatest}from\"redux-saga/effects\";import{fetchTaskApi}from'../../api';import{WATCH_TASK_LIST}from'../actionTypes';import{getAllTask}from'./action';function fetchTaskAsyn(){var taskList;return _regeneratorRuntime.wrap(function fetchTaskAsyn$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return call(fetchTaskApi);case 2:taskList=_context.sent;_context.next=5;return put(getAllTask(taskList.data));case 5:case\"end\":return _context.stop();}}},_marked);}export function watcherTaskApp(){return _regeneratorRuntime.wrap(function watcherTaskApp$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(WATCH_TASK_LIST,fetchTaskAsyn);case 2:case\"end\":return _context2.stop();}}},_marked2);}","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/redux/task-app/index.jsx"],"names":["fetchTaskAsyn","watcherTaskApp","call","put","takeLatest","fetchTaskApi","WATCH_TASK_LIST","getAllTask","taskList","data"],"mappings":"uMAKUA,a,iDAKOC,c,EAVjB,OAAQC,IAAR,CAAaC,GAAb,CAAiBC,UAAjB,KAAkC,oBAAlC,CACA,OAAQC,YAAR,KAA2B,WAA3B,CACA,OAAQC,eAAR,KAA8B,gBAA9B,CACA,OAAQC,UAAR,KAAyB,UAAzB,CAEA,QAAUP,CAAAA,aAAV,sJACqB,MAAME,CAAAA,IAAI,CAACG,YAAD,CAAV,CADrB,OACUG,QADV,+BAEI,MAAML,CAAAA,GAAG,CAACI,UAAU,CAACC,QAAQ,CAACC,IAAV,CAAX,CAAT,CAFJ,sDAKA,MAAO,SAAUR,CAAAA,cAAV,8IACH,MAAMG,CAAAA,UAAU,CAACE,eAAD,CAAiBN,aAAjB,CAAhB,CADG","sourcesContent":["import {call,put,takeLatest} from \"redux-saga/effects\";\nimport {fetchTaskApi} from '../../api'\nimport {WATCH_TASK_LIST} from '../actionTypes'\nimport {getAllTask} from './action'\n\nfunction* fetchTaskAsyn() {\n    const taskList = yield call(fetchTaskApi);\n    yield put(getAllTask(taskList.data));\n}\n\nexport function* watcherTaskApp() {\n    yield takeLatest(WATCH_TASK_LIST,fetchTaskAsyn)\n}"]},"metadata":{},"sourceType":"module"}