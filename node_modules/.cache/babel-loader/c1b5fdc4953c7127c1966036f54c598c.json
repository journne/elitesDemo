{"ast":null,"code":"import _objectSpread from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState,useEffect}from'react';import{Container,Row,Col,Card,CardHeader,CardBody,Button}from'reactstrap';import Breadcrumb from'../../../layout/breadcrumb';import{firebase_app}from'../../../data/config';import{deleteList,creatTodoList,updateTask,markAllTask}from'../../../services/todo-firebase.service';import{toast}from'react-toastify';import{ToDo,AddNewTask,AddTask,Close}from'../../../constant';var TodoFirebase=function TodoFirebase(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todoList=_useState2[0],setTodoList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),addTask=_useState4[0],setAddTask=_useState4[1];// eslint-disable-next-line\nvar _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),border_danger=_useState6[0],setBorder_danger=_useState6[1];var _useState7=useState(''),_useState8=_slicedToArray(_useState7,2),task=_useState8[0],setTask=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),markAll=_useState10[0],setMarkAll=_useState10[1];useEffect(function(){var unsubscribe=firebase_app.firestore().collection('todo').onSnapshot(function(snapshot){var newItem=snapshot.docs.map(function(doc){return _objectSpread({id:doc.id},doc.data());});setTodoList(newItem);});return function(){return unsubscribe();};},[]);var addNewTask=function addNewTask(){if(task===''){document.querySelector('.ng-valid').classList.remove('border-danger');document.querySelector('.ng-valid').classList.add('border-danger');}else{creatTodoList(task);setAddTask('');setTask('');document.getElementById('newtask').value='';document.querySelector('.ng-valid').classList.add('taskmag-hide');document.querySelector('.ng-valid').classList.remove('taskmag-show');document.querySelector('.add-task-btn').classList.remove('hide');}};var handleRemoveTodo=function handleRemoveTodo(todoId){deleteList(todoId);toast.success(\"Deleted Task !\");};var handleMarkedTodo=function handleMarkedTodo(index,todo){if(todo.completed===false){toast.success(\"Task Completed !\");}if(todo.completed===true){toast.error(\"Task In-completed !\");}todo.completed=!todo.completed;updateTask(todo);};var markAllStatus=function markAllStatus(checked){if(checked===true){toast.success(\"All Task Completed !\");}else{toast.error(\"All Task In-Completed !\");}setMarkAll(checked);markAllTask(checked);};var openTaskWrapper=function openTaskWrapper(){setAddTask(' visible');document.querySelector('.add-task-btn').classList.add('hide');};var closeTaskWrapper=function closeTaskWrapper(){setAddTask('');document.querySelector('.add-task-btn').classList.remove('hide');};var onTaskChanged=function onTaskChanged(e){setTask(e.currentTarget.value);};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Apps\",title:\"To-Do Firebase\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{xl:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,ToDo)),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(\"div\",{className:\"todo\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-wrapper\"},/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-container\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mark-all-tasks\"},/*#__PURE__*/React.createElement(\"div\",{className:\"mark-all-tasks-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"mark-all-btn\",id:\"mark-all-finished\",role:\"button\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as finished\"),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box completed\",onClick:function onClick(){return markAllStatus(!markAll);}},markAll&&/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"})))),/*#__PURE__*/React.createElement(\"span\",{className:\"mark-all-btn move-down\",id:\"mark-all-incomplete\",role:\"button\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn-label\"},\"Mark all as Incomplete\"),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"})))))),/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-body\"},/*#__PURE__*/React.createElement(\"ul\",{id:\"todo-list\"},todoList.length>0?todoList.map(function(todoData,index){return/*#__PURE__*/React.createElement(\"li\",{className:\"task \"+(todoData.completed?'completed':''),key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"task-container\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"task-label\"},todoData.task),/*#__PURE__*/React.createElement(\"span\",{className:\"task-action-btn\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\",onClick:function onClick(){return handleRemoveTodo(todoData.id);}},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-trash\"}))),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\",onClick:function onClick(){return handleMarkedTodo(index,todoData);}},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"}))))));}):'')),/*#__PURE__*/React.createElement(\"div\",{className:\"todo-list-footer\"},/*#__PURE__*/React.createElement(\"div\",{className:\"add-task-btn-wrapper\"},/*#__PURE__*/React.createElement(\"span\",{className:\"add-task-btn\"},/*#__PURE__*/React.createElement(Button,{color:\"primary\",onClick:openTaskWrapper},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-plus\"}),\" \",AddNewTask))),/*#__PURE__*/React.createElement(\"div\",{className:\"new-task-wrapper\"+addTask},/*#__PURE__*/React.createElement(\"textarea\",{className:\"ng-untouched ng-pristine ng-valid\"+border_danger,id:\"newtask\",placeholder:\"Enter new task here. . .\",defaultValue:task,onChange:onTaskChanged}),/*#__PURE__*/React.createElement(Button,{color:\"danger\",className:\"cancel-btn\",id:\"close-task-panel\",onClick:closeTaskWrapper},Close),/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"ml-3 add-new-task-btn\",id:\"add-task\",onClick:addNewTask},AddTask))))),/*#__PURE__*/React.createElement(\"div\",{className:\"notification-popup hide\"},/*#__PURE__*/React.createElement(\"p\",null,/*#__PURE__*/React.createElement(\"span\",{className:\"task\"}),/*#__PURE__*/React.createElement(\"span\",{className:\"notification-text\"})))),/*#__PURE__*/React.createElement(\"script\",{id:\"task-template\",type:\"tect/template\"},/*#__PURE__*/React.createElement(\"li\",{className:\"task\"},/*#__PURE__*/React.createElement(\"div\",{className:\"task-container\"},/*#__PURE__*/React.createElement(\"span\",{className:\"task-action-btn\"},/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large delete-btn\",title:\"Delete Task\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-trash\"}))),/*#__PURE__*/React.createElement(\"span\",{className:\"action-box large complete-btn\",title:\"Mark Complete\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon\"},/*#__PURE__*/React.createElement(\"i\",{className:\"icon-check\"})))))))))))));};export default TodoFirebase;","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/application/todo-firebase-app/index.jsx"],"names":["React","Fragment","useState","useEffect","Container","Row","Col","Card","CardHeader","CardBody","Button","Breadcrumb","firebase_app","deleteList","creatTodoList","updateTask","markAllTask","toast","ToDo","AddNewTask","AddTask","Close","TodoFirebase","todoList","setTodoList","addTask","setAddTask","border_danger","setBorder_danger","task","setTask","markAll","setMarkAll","unsubscribe","firestore","collection","onSnapshot","snapshot","newItem","docs","map","doc","id","data","addNewTask","document","querySelector","classList","remove","add","getElementById","value","handleRemoveTodo","todoId","success","handleMarkedTodo","index","todo","completed","error","markAllStatus","checked","openTaskWrapper","closeTaskWrapper","onTaskChanged","e","currentTarget","length","todoData"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\nimport {Container,Row,Col,Card,CardHeader,CardBody,Button} from 'reactstrap'\nimport Breadcrumb from '../../../layout/breadcrumb';\nimport {firebase_app} from '../../../data/config';\nimport { deleteList, creatTodoList, updateTask, markAllTask } from '../../../services/todo-firebase.service';\nimport { toast } from 'react-toastify';\nimport {ToDo, AddNewTask,AddTask,Close} from '../../../constant'\n\nconst TodoFirebase = () => {\n    \n    const [todoList, setTodoList] = useState([]);\n    const [addTask, setAddTask] = useState('');\n    // eslint-disable-next-line\n    const [border_danger, setBorder_danger] = useState('');\n    const [task, setTask] = useState('');\n    const [markAll, setMarkAll] = useState(false);\n\n    useEffect(() => {\n        const unsubscribe = firebase_app.firestore().collection('todo').onSnapshot((snapshot) => {\n            const newItem = snapshot.docs.map((doc) => ({\n                id: doc.id,\n                ...doc.data()\n            }))\n            setTodoList(newItem)\n        })\n        return () => unsubscribe();\n    }, []);\n\n    const addNewTask = () => {\n        if (task === '') {\n            document.querySelector('.ng-valid').classList.remove('border-danger')\n            document.querySelector('.ng-valid').classList.add('border-danger')\n        } else {\n            creatTodoList(task);\n            setAddTask('')\n            setTask('')\n            document.getElementById('newtask').value = '';\n            document.querySelector('.ng-valid').classList.add('taskmag-hide')\n            document.querySelector('.ng-valid').classList.remove('taskmag-show')\n            document.querySelector('.add-task-btn').classList.remove('hide')\n        }\n    }\n\n    const handleRemoveTodo = (todoId) => {\n        deleteList(todoId)\n        toast.success(\"Deleted Task !\");\n    }\n\n    const handleMarkedTodo = (index, todo) => {\n        if (todo.completed ===  false) {\n            toast.success(\"Task Completed !\");\n        }\n        if(todo.completed ===  true){\n        toast.error(\"Task In-completed !\");\n        }\n        todo.completed = !todo.completed;\n        updateTask(todo);\n    }\n\n    const markAllStatus = (checked) => {\n        if(checked === true){\n            toast.success(\"All Task Completed !\");\n        }else{\n            toast.error(\"All Task In-Completed !\");\n        }\n        setMarkAll(checked);\n        markAllTask(checked)\n    }\n\n    const openTaskWrapper = () => {\n        setAddTask(' visible')\n        document.querySelector('.add-task-btn').classList.add('hide')\n    }\n\n    const closeTaskWrapper = () => {\n        setAddTask('')\n        document.querySelector('.add-task-btn').classList.remove('hide')\n    }\n\n    const onTaskChanged = (e) => {\n        setTask(e.currentTarget.value);\n    }\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Apps\" title=\"To-Do Firebase\" />\n            <Container fluid={true}>\n                <Row>\n                    <Col xl=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>{ToDo}</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <div className=\"todo\">\n                                    <div className=\"todo-list-wrapper\">\n                                        <div className=\"todo-list-container\">\n                                            <div className=\"mark-all-tasks\">\n                                                <div className=\"mark-all-tasks-container\">\n                                                    <span className=\"mark-all-btn\" id=\"mark-all-finished\" role=\"button\">\n                                                        <span className=\"btn-label\">{\"Mark all as finished\"}</span>\n                                                        <span className=\"action-box completed\" onClick={() => markAllStatus(!markAll)}>\n                                                            {markAll &&\n                                                                <i className=\"icon\"><i className=\"icon-check\"></i></i>}\n                                                        </span>\n                                                    </span>\n                                                    <span className=\"mark-all-btn move-down\" id=\"mark-all-incomplete\" role=\"button\">\n                                                        <span className=\"btn-label\">{\"Mark all as Incomplete\"}</span>\n                                                        <span className=\"action-box\">\n                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                        </span>\n                                                    </span>\n                                                </div>\n                                            </div>\n                                            <div className=\"todo-list-body\">\n                                                <ul id=\"todo-list\">\n                                                    {todoList.length > 0 ?\n                                                        todoList.map((todoData, index) =>\n                                                            <li className={\"task \" + (todoData.completed ? 'completed' : '')} key={index} >\n                                                                <div className=\"task-container\">\n                                                                    <h4 className=\"task-label\">{todoData.task}</h4>\n                                                                    <span className=\"task-action-btn\">\n                                                                        <span className=\"action-box large delete-btn\" title=\"Delete Task\" onClick={() => handleRemoveTodo(todoData.id)} >\n                                                                            <i className=\"icon\"><i className=\"icon-trash\"></i></i></span>\n                                                                        <span className=\"action-box large complete-btn\" title=\"Mark Complete\" onClick={() => handleMarkedTodo(index, todoData)} >\n                                                                            <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                                        </span>\n                                                                    </span>\n                                                                </div>\n                                                            </li>\n                                                        ) : ''}\n                                                </ul>\n                                            </div>\n                                            <div className=\"todo-list-footer\">\n                                                <div className=\"add-task-btn-wrapper\"><span className=\"add-task-btn\">\n                                                    <Button color=\"primary\" onClick={openTaskWrapper} >\n                                                        <i className=\"icon-plus\"></i> {AddNewTask}</Button></span></div>\n                                                <div className={\"new-task-wrapper\" + addTask}>\n                                                    <textarea\n                                                        className={\"ng-untouched ng-pristine ng-valid\" + border_danger}\n                                                        id=\"newtask\"\n                                                        placeholder=\"Enter new task here. . .\"\n                                                        defaultValue={task}\n                                                        onChange={onTaskChanged}\n                                                    >\n                                                    </textarea>\n                                                    <Button color=\"danger\" className=\"cancel-btn\" id=\"close-task-panel\" onClick={closeTaskWrapper}>{Close}</Button>\n                                                    <Button color=\"success\" className=\"ml-3 add-new-task-btn\" id=\"add-task\" onClick={addNewTask}>{AddTask}</Button>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div className=\"notification-popup hide\">\n                                        <p><span className=\"task\"></span><span className=\"notification-text\"></span></p>\n                                    </div>\n                                </div>\n                                <script id=\"task-template\" type=\"tect/template\">\n                                    <li className=\"task\">\n                                        <div className=\"task-container\">\n                                            <span className=\"task-action-btn\">\n                                                <span className=\"action-box large delete-btn\" title=\"Delete Task\">\n                                                    <i className=\"icon\"><i className=\"icon-trash\"></i></i>\n                                                </span>\n                                                <span className=\"action-box large complete-btn\" title=\"Mark Complete\">\n                                                    <i className=\"icon\"><i className=\"icon-check\"></i></i>\n                                                </span>\n                                            </span>\n                                        </div>\n                                    </li>\n                                </script>\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n};\n\nexport default TodoFirebase;"]},"metadata":{},"sourceType":"module"}