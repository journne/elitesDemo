{"ast":null,"code":"import _slicedToArray from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{Fragment,useState}from'react';import Breadcrumb from'../../layout/breadcrumb';import Dropzone from'react-dropzone-uploader';import{Container,Row,Col,Card,CardBody,Form,FormGroup,Label,Input,Button}from'reactstrap';import DatePicker from\"react-datepicker\";import{useForm}from'react-hook-form';import{addRecipe}from'../../redux/recipes/action';import{useDispatch}from'react-redux';import{withRouter,Link}from'react-router-dom';import{MealName,Duration,ProjectTitle,ClientName,ProjectRate,ProjectStatus,ProgressLevel,ProjectSize,Small,Medium,Big,StartingDate,EndingDate,EnterSomeDetails,UploadProjectFile,Add,Cancel,Done,Doing}from'../../constant';import SimpleMDE from\"react-simplemde-editor\";import{MDEEditorExample}from\"../../constant\";var Payment=function Payment(props){var _useState=useState(\"Enter text in the area on the left. For more info, click the ? (help) icon in the menu.\"),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];var handleChange=function handleChange(){setText(\"Enter text in the area on the left. For more info, click the ? (help) icon in the menu.\");};var dispatch=useDispatch();var _useForm=useForm(),register=_useForm.register,handleSubmit=_useForm.handleSubmit,errors=_useForm.errors;var _useState3=useState(new Date()),_useState4=_slicedToArray(_useState3,2),startDate=_useState4[0],setstartDate=_useState4[1];var _useState5=useState(new Date()),_useState6=_slicedToArray(_useState5,2),endDate=_useState6[0],setendDate=_useState6[1];var handleStartDate=function handleStartDate(date){setstartDate(date);};var handleEndDate=function handleEndDate(date){setendDate(date);};var getUploadParams=function getUploadParams(_ref){var meta=_ref.meta;return{url:'https://httpbin.org/post'};};// called every time a file's `status` changes\nvar handleChangeStatus=function handleChangeStatus(_ref2,status){var meta=_ref2.meta,file=_ref2.file;};var AddRecipe=function AddRecipe(data){if(data!==''){dispatch(addRecipe(data));props.history.push(\"\".concat(process.env.PUBLIC_URL,\"/app/project/project-list\"));}else{errors.showMessages();}};return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"settings\",title:\"Payment\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Form,{className:\"theme-form\",onSubmit:handleSubmit(AddRecipe)},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Sk_Live\"),/*#__PURE__*/React.createElement(Input,{className:\"form-control\",type:\"text\",name:\"client_name\",placeholder:\"Name client or company name\",innerRef:register({required:true})}),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},errors.client_name&&'Client Name is required')))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Pk_Live\"),/*#__PURE__*/React.createElement(Input,{className:\"form-control\",type:\"text\",name:\"client_name\",placeholder:\"Name client or company name\",innerRef:register({required:true})}),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},errors.client_name&&'Client Name is required')))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Name\"),/*#__PURE__*/React.createElement(Input,{className:\"form-control\",type:\"text\",name:\"client_name\",placeholder:\"Name client or company name\",innerRef:register({required:true})}),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},errors.client_name&&'Client Name is required')))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"4\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Image\"),/*#__PURE__*/React.createElement(Input,{className:\"form-control\",type:\"text\",name:\"client_name\",placeholder:\"Name client or company name\",innerRef:register({required:true})}),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},errors.client_name&&'Client Name is required')))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Description\"),/*#__PURE__*/React.createElement(Input,{type:\"textarea\",className:\"form-control\",name:\"description\",rows:\"3\",innerRef:register({required:true})}),/*#__PURE__*/React.createElement(\"span\",{style:{color:\"red\"}},errors.description&&'Some Details is required')))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(Label,null,\"Upload Image File\"),/*#__PURE__*/React.createElement(Dropzone,{getUploadParams:getUploadParams,onChangeStatus:handleChangeStatus,maxFiles:1,multiple:false,canCancel:false,inputContent:\"Drop A File\",styles:{dropzone:{width:'100%',height:50},dropzoneActive:{borderColor:'green'}}})))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(FormGroup,{className:\"mb-0\"},/*#__PURE__*/React.createElement(Button,{color:\"success\",className:\"mr-3\"},Add),/*#__PURE__*/React.createElement(Link,{to:\"\".concat(process.env.PUBLIC_URL,\"/app/project/project-list\")},/*#__PURE__*/React.createElement(Button,{color:\"danger\"},Cancel))))))))))));};export default withRouter(Payment);","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/settings/payment.jsx"],"names":["React","Fragment","useState","Breadcrumb","Dropzone","Container","Row","Col","Card","CardBody","Form","FormGroup","Label","Input","Button","DatePicker","useForm","addRecipe","useDispatch","withRouter","Link","MealName","Duration","ProjectTitle","ClientName","ProjectRate","ProjectStatus","ProgressLevel","ProjectSize","Small","Medium","Big","StartingDate","EndingDate","EnterSomeDetails","UploadProjectFile","Add","Cancel","Done","Doing","SimpleMDE","MDEEditorExample","Payment","props","text","setText","handleChange","dispatch","register","handleSubmit","errors","Date","startDate","setstartDate","endDate","setendDate","handleStartDate","date","handleEndDate","getUploadParams","meta","url","handleChangeStatus","status","file","AddRecipe","data","history","push","process","env","PUBLIC_URL","showMessages","required","color","client_name","description","dropzone","width","height","dropzoneActive","borderColor"],"mappings":"8JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAAyBC,QAAzB,KAAyC,OAAzC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,OAAQC,SAAR,CAAkBC,GAAlB,CAAsBC,GAAtB,CAA0BC,IAA1B,CAA+BC,QAA/B,CAAwCC,IAAxC,CAA6CC,SAA7C,CAAuDC,KAAvD,CAA6DC,KAA7D,CAAmEC,MAAnE,KAAgF,YAAhF,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OAAQC,OAAR,KAAsB,iBAAtB,CACA,OAAQC,SAAR,KAAwB,4BAAxB,CACA,OAASC,WAAT,KAA4B,aAA5B,CACA,OAAQC,UAAR,CAAmBC,IAAnB,KAA8B,kBAA9B,CACA,OAAQC,QAAR,CAAiBC,QAAjB,CAA0BC,YAA1B,CAAuCC,UAAvC,CAAkDC,WAAlD,CAA8DC,aAA9D,CAA4EC,aAA5E,CAA0FC,WAA1F,CAAsGC,KAAtG,CAA4GC,MAA5G,CAAmHC,GAAnH,CAAuHC,YAAvH,CAAoIC,UAApI,CAA+IC,gBAA/I,CAAgKC,iBAAhK,CAAkLC,GAAlL,CAAsLC,MAAtL,CAA6LC,IAA7L,CAAkMC,KAAlM,KAA8M,gBAA9M,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,OAASC,gBAAT,KAAiC,gBAAjC,CAGA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,KAAD,CAAW,eAEJzC,QAAQ,2FAFJ,wCAEpB0C,IAFoB,eAEfC,OAFe,eAGvB,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACvBD,OAAO,CAAC,yFAAD,CAAP,CACH,CAFD,CAIA,GAAME,CAAAA,QAAQ,CAAG7B,WAAW,EAA5B,CAPuB,aAQoBF,OAAO,EAR3B,CAQfgC,QARe,UAQfA,QARe,CAQLC,YARK,UAQLA,YARK,CAQSC,MART,UAQSA,MART,gBASWhD,QAAQ,CAAC,GAAIiD,CAAAA,IAAJ,EAAD,CATnB,yCAShBC,SATgB,eASLC,YATK,8BAUOnD,QAAQ,CAAC,GAAIiD,CAAAA,IAAJ,EAAD,CAVf,yCAUhBG,OAVgB,eAUPC,UAVO,eAYvB,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,IAAI,CAAI,CAC9BJ,YAAY,CAACI,IAAD,CAAZ,CACD,CAFD,CAIA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAAD,IAAI,CAAI,CAC5BF,UAAU,CAACE,IAAD,CAAV,CACD,CAFD,CAIA,GAAME,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,MAAc,IAAXC,CAAAA,IAAW,MAAXA,IAAW,CAClC,MAAO,CACLC,GAAG,CAAE,0BADA,CAAP,CAGH,CAJD,CAOA;AACA,GAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,OAAiBC,MAAjB,CAA4B,IAAzBH,CAAAA,IAAyB,OAAzBA,IAAyB,CAAnBI,IAAmB,OAAnBA,IAAmB,CAAG,CAA1D,CAEA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAAAC,IAAI,CAAI,CACxB,GAAIA,IAAI,GAAK,EAAb,CAAiB,CACfnB,QAAQ,CAAC9B,SAAS,CAACiD,IAAD,CAAV,CAAR,CACAvB,KAAK,CAACwB,OAAN,CAAcC,IAAd,WAAsBC,OAAO,CAACC,GAAR,CAAYC,UAAlC,+BACD,CAHD,IAGO,CACLrB,MAAM,CAACsB,YAAP,GACD,CACF,CAPD,CASA,mBACI,oBAAC,QAAD,mBACA,oBAAC,UAAD,EAAY,MAAM,CAAC,UAAnB,CAA8B,KAAK,CAAC,SAApC,EADA,cAEA,oBAAC,SAAD,EAAW,KAAK,CAAE,IAAlB,eACI,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACE,oBAAC,IAAD,mBACE,oBAAC,QAAD,mBACE,oBAAC,IAAD,EAAM,SAAS,CAAC,YAAhB,CAA6B,QAAQ,CAAEvB,YAAY,CAACgB,SAAD,CAAnD,eAGE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,gBADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,IAAI,CAAC,aAAjD,CAA+D,WAAW,CAAC,6BAA3E,CAAyG,QAAQ,CAAEjB,QAAQ,CAAC,CAAEyB,QAAQ,CAAE,IAAZ,CAAD,CAA3H,EAFF,cAGE,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAb,EAAgCxB,MAAM,CAACyB,WAAP,EAAsB,yBAAtD,CAHF,CADF,CADF,CAHF,cAaG,oBAAC,GAAD,mBACC,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,gBADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,IAAI,CAAC,aAAjD,CAA+D,WAAW,CAAC,6BAA3E,CAAyG,QAAQ,CAAE3B,QAAQ,CAAC,CAAEyB,QAAQ,CAAE,IAAZ,CAAD,CAA3H,EAFF,cAGE,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAb,EAAgCxB,MAAM,CAACyB,WAAP,EAAsB,yBAAtD,CAHF,CADF,CADD,CAbH,cAuBE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,aADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,IAAI,CAAC,aAAjD,CAA+D,WAAW,CAAC,6BAA3E,CAAyG,QAAQ,CAAE3B,QAAQ,CAAC,CAAEyB,QAAQ,CAAE,IAAZ,CAAD,CAA3H,EAFF,cAGE,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAb,EAAgCxB,MAAM,CAACyB,WAAP,EAAsB,yBAAtD,CAHF,CADF,CADF,CAvBF,cAiCE,oBAAC,GAAD,mBACE,oBAAC,GAAD,EAAK,EAAE,CAAC,GAAR,eACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,cADF,cAEE,oBAAC,KAAD,EAAO,SAAS,CAAC,cAAjB,CAAgC,IAAI,CAAC,MAArC,CAA4C,IAAI,CAAC,aAAjD,CAA+D,WAAW,CAAC,6BAA3E,CAAyG,QAAQ,CAAE3B,QAAQ,CAAC,CAAEyB,QAAQ,CAAE,IAAZ,CAAD,CAA3H,EAFF,cAGE,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAb,EAAgCxB,MAAM,CAACyB,WAAP,EAAsB,yBAAtD,CAHF,CADF,CADF,CAjCF,cA4CE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,oBADF,cAEE,oBAAC,KAAD,EAAQ,IAAI,CAAC,UAAb,CAAwB,SAAS,CAAC,cAAlC,CAAiD,IAAI,CAAC,aAAtD,CAAoE,IAAI,CAAC,GAAzE,CAA6E,QAAQ,CAAE3B,QAAQ,CAAC,CAAEyB,QAAQ,CAAE,IAAZ,CAAD,CAA/F,EAFF,cAGE,4BAAM,KAAK,CAAE,CAAEC,KAAK,CAAE,KAAT,CAAb,EAAgCxB,MAAM,CAAC0B,WAAP,EAAsB,0BAAtD,CAHF,CADF,CADF,CA5CF,cAuDE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,SAAD,mBACE,oBAAC,KAAD,0BADF,cAEM,oBAAC,QAAD,EACI,eAAe,CAAEjB,eADrB,CAEI,cAAc,CAAEG,kBAFpB,CAGI,QAAQ,CAAE,CAHd,CAII,QAAQ,CAAE,KAJd,CAKI,SAAS,CAAE,KALf,CAMI,YAAY,CAAC,aANjB,CAOI,MAAM,CAAE,CACJe,QAAQ,CAAE,CAAEC,KAAK,CAAE,MAAT,CAAiBC,MAAM,CAAE,EAAzB,CADN,CAEJC,cAAc,CAAE,CAAEC,WAAW,CAAE,OAAf,CAFZ,CAPZ,EAFN,CADF,CADF,CAvDF,cA0EE,oBAAC,GAAD,mBACE,oBAAC,GAAD,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAC,MAArB,eACI,oBAAC,MAAD,EAAQ,KAAK,CAAC,SAAd,CAAwB,SAAS,CAAC,MAAlC,EAA0C7C,GAA1C,CADJ,cAEI,oBAAC,IAAD,EAAM,EAAE,WAAKiC,OAAO,CAACC,GAAR,CAAYC,UAAjB,6BAAR,eACA,oBAAC,MAAD,EAAQ,KAAK,CAAC,QAAd,EAAwBlC,MAAxB,CADA,CAFJ,CADF,CADF,CA1EF,CADF,CADF,CADF,CADF,CADJ,CAFA,CADJ,CAoGH,CA3ID,CA6IA,cAAelB,CAAAA,UAAU,CAACuB,OAAD,CAAzB","sourcesContent":["import React, { Fragment,useState } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport Dropzone from 'react-dropzone-uploader'\nimport {Container,Row,Col,Card,CardBody,Form,FormGroup,Label,Input,Button} from 'reactstrap'\nimport DatePicker from \"react-datepicker\";\nimport {useForm} from 'react-hook-form'\nimport {addRecipe} from '../../redux/recipes/action'\nimport { useDispatch } from 'react-redux';\nimport {withRouter,Link} from 'react-router-dom'\nimport {MealName,Duration,ProjectTitle,ClientName,ProjectRate,ProjectStatus,ProgressLevel,ProjectSize,Small,Medium,Big,StartingDate,EndingDate,EnterSomeDetails,UploadProjectFile,Add,Cancel,Done,Doing} from '../../constant'\nimport SimpleMDE from \"react-simplemde-editor\";\nimport { MDEEditorExample } from \"../../constant\";\n\n\nconst Payment = (props) => {\n\nconst [text,setText] = useState(`Enter text in the area on the left. For more info, click the ? (help) icon in the menu.`)\n    const handleChange = () => {\n        setText(\"Enter text in the area on the left. For more info, click the ? (help) icon in the menu.\")\n    }\n\n    const dispatch = useDispatch()\n    const { register, handleSubmit, errors } = useForm();\n    const [startDate, setstartDate] = useState(new Date())\n    const [endDate, setendDate] = useState(new Date())\n\n    const handleStartDate = date => {\n      setstartDate(date);\n    };\n\n    const handleEndDate = date => {\n      setendDate(date);\n    };\n    \n    const getUploadParams = ({ meta }) => { \n        return { \n          url: 'https://httpbin.org/post' \n        }\n    }\n    \n\n    // called every time a file's `status` changes\n    const handleChangeStatus = ({ meta, file }, status) => { }\n\n    const AddRecipe = data => {\n      if (data !== '') {\n        dispatch(addRecipe(data))\n        props.history.push(`${process.env.PUBLIC_URL}/app/project/project-list`)\n      } else {\n        errors.showMessages();\n      }\n    };\n\n    return (\n        <Fragment>\n        <Breadcrumb parent=\"settings\" title=\"Payment\" /> \n        <Container fluid={true}>\n            <Row>\n              <Col sm=\"12\">\n                <Card>\n                  <CardBody>\n                    <Form className=\"theme-form\" onSubmit={handleSubmit(AddRecipe)}>\n                    \n                      \n                      <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Sk_Live</Label>\n                            <Input className=\"form-control\" type=\"text\" name=\"client_name\" placeholder=\"Name client or company name\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.client_name && 'Client Name is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                       <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Pk_Live</Label>\n                            <Input className=\"form-control\" type=\"text\" name=\"client_name\" placeholder=\"Name client or company name\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.client_name && 'Client Name is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Name</Label>\n                            <Input className=\"form-control\" type=\"text\" name=\"client_name\" placeholder=\"Name client or company name\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.client_name && 'Client Name is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      <Row>\n                        <Col sm=\"4\">\n                          <FormGroup>\n                            <Label>Image</Label>\n                            <Input className=\"form-control\" type=\"text\" name=\"client_name\" placeholder=\"Name client or company name\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.client_name && 'Client Name is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n\n                      \n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Description</Label>\n                            <Input  type=\"textarea\" className=\"form-control\" name=\"description\" rows=\"3\" innerRef={register({ required: true })}/>\n                            <span style={{ color: \"red\" }}>{errors.description && 'Some Details is required'}</span>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      \n                      \n                      <Row>\n                        <Col>\n                          <FormGroup>\n                            <Label>Upload Image File</Label>\n                                <Dropzone\n                                    getUploadParams={getUploadParams}\n                                    onChangeStatus={handleChangeStatus}\n                                    maxFiles={1}\n                                    multiple={false}\n                                    canCancel={false}\n                                    inputContent=\"Drop A File\"\n                                    styles={{\n                                        dropzone: { width: '100%', height: 50 },\n                                        dropzoneActive: { borderColor: 'green' },\n                                    }}\n                                />\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                      <Row>\n                        <Col>\n                          <FormGroup className=\"mb-0\">\n                              <Button color=\"success\" className=\"mr-3\">{Add}</Button>\n                              <Link to={`${process.env.PUBLIC_URL}/app/project/project-list`}>\n                              <Button color=\"danger\">{Cancel}</Button>\n                              </Link>\n                          </FormGroup>\n                        </Col>\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n              </Col>\n            </Row>\n          </Container>\n        </Fragment>\n    );\n}\n\nexport default withRouter(Payment);"]},"metadata":{},"sourceType":"module"}