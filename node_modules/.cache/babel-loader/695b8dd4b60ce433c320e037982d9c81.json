{"ast":null,"code":"import _objectSpread from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{NEW_TASK,REMOVE_TASK,FETCH_ALL_TASK}from'../actionTypes';var initial_state={task:[],newtaskdata:[]};export default(function(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initial_state;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case FETCH_ALL_TASK:return _objectSpread(_objectSpread({},state),{},{task:action.payload});case NEW_TASK:state.newtaskdata.push({id:state.newtaskdata.length+1,title:action.payload.newtaskdata.title,desc:action.payload.newtaskdata.desc,collection:action.payload.newtaskdata.collection});state.task.push({id:state.newtaskdata.length+1,title:action.payload.newtaskdata.title,desc:action.payload.newtaskdata.desc,collection:action.payload.newtaskdata.collection});return _objectSpread(_objectSpread({},state),{},{newtaskdata:state.newtaskdata,task:state.task});case REMOVE_TASK:var new_task=state.newtaskdata.filter(function(item){return action.id!==item.id;});var created_task=state.task.filter(function(item){return action.id!==item.id;});return _objectSpread(_objectSpread({},state),{},{newtaskdata:new_task,task:created_task});default:return _objectSpread({},state);}});","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/redux/task-app/reducer.jsx"],"names":["NEW_TASK","REMOVE_TASK","FETCH_ALL_TASK","initial_state","task","newtaskdata","state","action","type","payload","push","id","length","title","desc","collection","new_task","filter","item","created_task"],"mappings":"6JAAA,OAAQA,QAAR,CAAiBC,WAAjB,CAA6BC,cAA7B,KAAkD,gBAAlD,CACA,GAAMC,CAAAA,aAAa,CAAG,CAClBC,IAAI,CAAC,EADa,CAElBC,WAAW,CAAC,EAFM,CAAtB,CAKA,eAAe,UAAmC,IAAlCC,CAAAA,KAAkC,2DAA1BH,aAA0B,IAAXI,CAAAA,MAAW,2CAC9C,OAAQA,MAAM,CAACC,IAAf,EAEI,IAAKN,CAAAA,cAAL,CACQ,sCAAWI,KAAX,MAAiBF,IAAI,CAACG,MAAM,CAACE,OAA7B,GAER,IAAKT,CAAAA,QAAL,CACQM,KAAK,CAACD,WAAN,CAAkBK,IAAlB,CAAuB,CACnBC,EAAE,CAAEL,KAAK,CAACD,WAAN,CAAkBO,MAAlB,CAA2B,CADZ,CAEnBC,KAAK,CAAEN,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BQ,KAFf,CAGnBC,IAAI,CAAEP,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BS,IAHd,CAInBC,UAAU,CAACR,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BU,UAJnB,CAAvB,EAMAT,KAAK,CAACF,IAAN,CAAWM,IAAX,CAAgB,CACZC,EAAE,CAAEL,KAAK,CAACD,WAAN,CAAkBO,MAAlB,CAA2B,CADnB,CAEZC,KAAK,CAAEN,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BQ,KAFtB,CAGZC,IAAI,CAAEP,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BS,IAHrB,CAIZC,UAAU,CAACR,MAAM,CAACE,OAAP,CAAeJ,WAAf,CAA2BU,UAJ1B,CAAhB,EAMJ,sCAAWT,KAAX,MAAiBD,WAAW,CAACC,KAAK,CAACD,WAAnC,CAA+CD,IAAI,CAACE,KAAK,CAACF,IAA1D,GAEJ,IAAKH,CAAAA,WAAL,CACQ,GAAIe,CAAAA,QAAQ,CAAGV,KAAK,CAACD,WAAN,CAAkBY,MAAlB,CAAyB,SAAAC,IAAI,QAAGX,CAAAA,MAAM,CAACI,EAAP,GAAcO,IAAI,CAACP,EAAtB,EAA7B,CAAf,CACA,GAAIQ,CAAAA,YAAY,CAAGb,KAAK,CAACF,IAAN,CAAWa,MAAX,CAAkB,SAAAC,IAAI,QAAGX,CAAAA,MAAM,CAACI,EAAP,GAAcO,IAAI,CAACP,EAAtB,EAAtB,CAAnB,CACA,sCAAUL,KAAV,MAAgBD,WAAW,CAAEW,QAA7B,CAAsCZ,IAAI,CAAEe,YAA5C,GAER,QAAS,wBAAYb,KAAZ,EAzBb,CA2BH,CA5BD","sourcesContent":["import {NEW_TASK,REMOVE_TASK,FETCH_ALL_TASK} from '../actionTypes'\nconst initial_state = {\n    task:[],\n    newtaskdata:[],\n}\n\nexport default (state = initial_state, action) => {\n    switch (action.type) {\n\n        case FETCH_ALL_TASK:\n                return {...state,task:action.payload }\n\n        case NEW_TASK:\n                state.newtaskdata.push({\n                    id: state.newtaskdata.length + 1,\n                    title: action.payload.newtaskdata.title,\n                    desc: action.payload.newtaskdata.desc,\n                    collection:action.payload.newtaskdata.collection\n                })\n                state.task.push({\n                    id: state.newtaskdata.length + 1,\n                    title: action.payload.newtaskdata.title,\n                    desc: action.payload.newtaskdata.desc,\n                    collection:action.payload.newtaskdata.collection\n                })\n            return {...state,newtaskdata:state.newtaskdata,task:state.task};\n\n        case REMOVE_TASK:\n                let new_task = state.newtaskdata.filter(item=> action.id !== item.id)\n                let created_task = state.task.filter(item=> action.id !== item.id)\n                return{...state,newtaskdata: new_task,task: created_task}\n                \n        default: return { ...state };\n    }\n}"]},"metadata":{},"sourceType":"module"}