{"ast":null,"code":"import React,{Fragment}from'react';import Breadcrumb from'../../layout/breadcrumb';import{Calendar,momentLocalizer,Views}from'react-big-calendar';import moment from'moment';import myEventsList from\"./events\";import{Container,Row,Col,Card,CardHeader,CardBody}from'reactstrap';import{BasicCalendars}from\"../../constant\";var localizer=momentLocalizer(moment);var allViews=Object.keys(Views).map(function(k){return Views[k];});var BasicCalender=function BasicCalender(){return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Breadcrumb,{parent:\"Calendar\",title:\"Basic Calender\"}),/*#__PURE__*/React.createElement(Container,{fluid:true},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{sm:\"12\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(CardHeader,null,/*#__PURE__*/React.createElement(\"h5\",null,BasicCalendars)),/*#__PURE__*/React.createElement(CardBody,null,/*#__PURE__*/React.createElement(Calendar,{localizer:localizer,scrollToTime:new Date(1970,1,1,6),defaultDate:new Date(2019,3,12),onSelectEvent:function onSelectEvent(event){return alert(event.title);},views:allViews,events:myEventsList,eventOverlap:true,dragRevertDuration:500,dragScroll:true,droppable:true,showMultiDayTimes:true,step:60,startAccessor:\"start\",endAccessor:\"end\"})))))));};export default BasicCalender;","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/components/calendar/basicCalendar.jsx"],"names":["React","Fragment","Breadcrumb","Calendar","momentLocalizer","Views","moment","myEventsList","Container","Row","Col","Card","CardHeader","CardBody","BasicCalendars","localizer","allViews","Object","keys","map","k","BasicCalender","Date","event","alert","title"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,OAASC,QAAT,CAAmBC,eAAnB,CAAmCC,KAAnC,KAA+C,oBAA/C,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,YAAP,KAAyB,UAAzB,CACA,OAAQC,SAAR,CAAkBC,GAAlB,CAAsBC,GAAtB,CAA0BC,IAA1B,CAA+BC,UAA/B,CAA0CC,QAA1C,KAAyD,YAAzD,CACA,OAASC,cAAT,KAA+B,gBAA/B,CACA,GAAMC,CAAAA,SAAS,CAAGX,eAAe,CAACE,MAAD,CAAjC,CACA,GAAIU,CAAAA,QAAQ,CAAGC,MAAM,CAACC,IAAP,CAAYb,KAAZ,EAAmBc,GAAnB,CAAuB,SAAAC,CAAC,QAAIf,CAAAA,KAAK,CAACe,CAAD,CAAT,EAAxB,CAAf,CAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CAExB,mBACI,oBAAC,QAAD,mBACI,oBAAC,UAAD,EAAY,MAAM,CAAC,UAAnB,CAA8B,KAAK,CAAC,gBAApC,EADJ,cAEI,oBAAC,SAAD,EAAW,KAAK,CAAE,IAAlB,eACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,IAAD,mBACI,oBAAC,UAAD,mBACI,8BAAKP,cAAL,CADJ,CADJ,cAII,oBAAC,QAAD,mBACI,oBAAC,QAAD,EACI,SAAS,CAAEC,SADf,CAEI,YAAY,CAAE,GAAIO,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,CAAlB,CAAqB,CAArB,CAFlB,CAGI,WAAW,CAAE,GAAIA,CAAAA,IAAJ,CAAS,IAAT,CAAe,CAAf,CAAkB,EAAlB,CAHjB,CAII,aAAa,CAAE,uBAAAC,KAAK,QAAIC,CAAAA,KAAK,CAACD,KAAK,CAACE,KAAP,CAAT,EAJxB,CAKI,KAAK,CAAET,QALX,CAMI,MAAM,CAAET,YANZ,CAOI,YAAY,KAPhB,CAQI,kBAAkB,CAAE,GARxB,CASI,UAAU,KATd,CAUI,SAAS,CAAE,IAVf,CAWI,iBAAiB,KAXrB,CAYI,IAAI,CAAE,EAZV,CAaI,aAAa,CAAC,OAblB,CAcI,WAAW,CAAC,KAdhB,EADJ,CAJJ,CADJ,CADJ,CADJ,CAFJ,CADJ,CAmCH,CArCD,CAuCA,cAAec,CAAAA,aAAf","sourcesContent":["import React, { Fragment } from 'react';\nimport Breadcrumb from '../../layout/breadcrumb'\nimport { Calendar, momentLocalizer,Views} from 'react-big-calendar'\nimport moment from 'moment'\nimport myEventsList from \"./events\";\nimport {Container,Row,Col,Card,CardHeader,CardBody} from 'reactstrap'\nimport { BasicCalendars } from \"../../constant\";\nconst localizer = momentLocalizer(moment)\nlet allViews = Object.keys(Views).map(k => Views[k])\n\n\nconst BasicCalender = () => {\n\n    return (\n        <Fragment>\n            <Breadcrumb parent=\"Calendar\" title=\"Basic Calender\"/>\n            <Container fluid={true}>\n                <Row>\n                    <Col sm=\"12\">\n                        <Card>\n                            <CardHeader>\n                                <h5>{BasicCalendars}</h5>\n                            </CardHeader>\n                            <CardBody>\n                                <Calendar\n                                    localizer={localizer}\n                                    scrollToTime={new Date(1970, 1, 1, 6)}\n                                    defaultDate={new Date(2019, 3, 12)}\n                                    onSelectEvent={event => alert(event.title)}\n                                    views={allViews}\n                                    events={myEventsList}\n                                    eventOverlap\n                                    dragRevertDuration={500}\n                                    dragScroll\n                                    droppable={true}\n                                    showMultiDayTimes\n                                    step={60}\n                                    startAccessor=\"start\"\n                                    endAccessor=\"end\"\n                                />\n                            </CardBody>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </Fragment>\n    );\n    \n};\n\nexport default BasicCalender;"]},"metadata":{},"sourceType":"module"}