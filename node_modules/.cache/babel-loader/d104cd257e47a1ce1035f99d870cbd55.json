{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tola/Downloads/Elites/elitesDemo/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchChatMemberAsyn),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchChatAsyn),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(sendMessageAsyn),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(replyByUserAsyn),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(createNewChatAsyn),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(WatcherChatApp);import{call,put,takeLatest}from\"redux-saga/effects\";import{fetchChatApi1,fetchChatApi2}from\"../../api\";import{WATCH_CHAT_MEMBERS,WATCH_CHAT_SUCCESS,SEND_MESSAGE_WATCHER,REPLY_MESSAGE_WATCHER,CREATE_CHAT_WATCHER}from\"../../redux/actionTypes\";import{getMembersSuccess,sendMessageToChat,replyMessageToChat,getChats,getChatsSuccess,updateSelectedUser,createChat}from\"../../redux/chap-app/action\";function fetchChatMemberAsyn(){var chatData;return _regeneratorRuntime.wrap(function fetchChatMemberAsyn$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return call(fetchChatApi1);case 2:chatData=_context.sent;_context.next=5;return put(getMembersSuccess(chatData.data));case 5:case\"end\":return _context.stop();}}},_marked);}function fetchChatAsyn(){var chatData,currentUserId,online,chats,chat,selectedUser;return _regeneratorRuntime.wrap(function fetchChatAsyn$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return call(fetchChatApi2);case 2:chatData=_context2.sent;currentUserId=0;_context2.next=6;return put(getChats(chatData.data));case 6:online=true;chats=chatData.data;chat=chats.data.filter(function(x){return x.users.includes(currentUserId);});selectedUser=chats.data[0].users.find(function(x){return x!==currentUserId;});_context2.next=12;return put(getChatsSuccess(chat,selectedUser,online));case 12:_context2.next=14;return put(updateSelectedUser(selectedUser,online));case 14:case\"end\":return _context2.stop();}}},_marked2);}function sendMessageAsyn(_ref){var currentUserId,selectedUserId,messageInput,chats,online,chat,now,time,status,chats_data;return _regeneratorRuntime.wrap(function sendMessageAsyn$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:currentUserId=_ref.currentUserId,selectedUserId=_ref.selectedUserId,messageInput=_ref.messageInput,chats=_ref.chats,online=_ref.online;chat=chats.find(function(x){return x.users.includes(currentUserId)&&x.users.includes(selectedUserId);});now=new Date();time=now.getHours()+\":\"+now.getMinutes();status=online;if(!chat){_context3.next=13;break;}chat.messages.push({sender:currentUserId,time:time,text:messageInput,status:true});chat.lastMessageTime=time;chat.online=status;chats_data=chats.filter(function(x){return x.id!==chat.id;});chats_data.splice(0,0,chat);_context3.next=13;return put(getChatsSuccess(chats,selectedUserId,online));case 13:_context3.next=15;return put(sendMessageToChat(currentUserId,selectedUserId,messageInput,chats,online));case 15:case\"end\":return _context3.stop();}}},_marked3);}function replyByUserAsyn(_ref2){var currentUserId,selectedUserId,replyMessage,chats,online,chat,now,time,status,chats_data;return _regeneratorRuntime.wrap(function replyByUserAsyn$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:currentUserId=_ref2.currentUserId,selectedUserId=_ref2.selectedUserId,replyMessage=_ref2.replyMessage,chats=_ref2.chats,online=_ref2.online;chat=chats.find(function(x){return x.users.includes(currentUserId)&&x.users.includes(selectedUserId);});now=new Date();time=now.getHours()+\":\"+now.getMinutes();status=online;if(!chat){_context4.next=13;break;}chat.messages.push({sender:selectedUserId,time:time,text:replyMessage,status:true});chat.lastMessageTime=time;chat.online=status;chats_data=chats.filter(function(x){return x.id!==chat.id;});chats_data.splice(0,0,chat);_context4.next=13;return put(getChatsSuccess(chats_data,selectedUserId,online));case 13:_context4.next=15;return put(replyMessageToChat(currentUserId,selectedUserId,replyMessage,chats,online));case 15:case\"end\":return _context4.stop();}}},_marked4);}function createNewChatAsyn(_ref3){var currentUserId,selectedUserId,chats,conversation;return _regeneratorRuntime.wrap(function createNewChatAsyn$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:currentUserId=_ref3.currentUserId,selectedUserId=_ref3.selectedUserId,chats=_ref3.chats;_context5.next=3;return put(createChat(currentUserId,selectedUserId,chats));case 3:conversation={id:chats.length+1,users:[currentUserId,selectedUserId],lastMessageTime:\"-\",messages:[]};chats.splice(0,0,conversation);_context5.next=7;return put(getChatsSuccess(chats,selectedUserId));case 7:case\"end\":return _context5.stop();}}},_marked5);}export function WatcherChatApp(){return _regeneratorRuntime.wrap(function WatcherChatApp$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeLatest(WATCH_CHAT_MEMBERS,fetchChatMemberAsyn);case 2:_context6.next=4;return takeLatest(WATCH_CHAT_SUCCESS,fetchChatAsyn);case 4:_context6.next=6;return takeLatest(SEND_MESSAGE_WATCHER,sendMessageAsyn);case 6:_context6.next=8;return takeLatest(REPLY_MESSAGE_WATCHER,replyByUserAsyn);case 8:_context6.next=10;return takeLatest(CREATE_CHAT_WATCHER,createNewChatAsyn);case 10:case\"end\":return _context6.stop();}}},_marked6);}","map":{"version":3,"sources":["/Users/tola/Downloads/Elites/elitesDemo/src/redux/chap-app/index.jsx"],"names":["fetchChatMemberAsyn","fetchChatAsyn","sendMessageAsyn","replyByUserAsyn","createNewChatAsyn","WatcherChatApp","call","put","takeLatest","fetchChatApi1","fetchChatApi2","WATCH_CHAT_MEMBERS","WATCH_CHAT_SUCCESS","SEND_MESSAGE_WATCHER","REPLY_MESSAGE_WATCHER","CREATE_CHAT_WATCHER","getMembersSuccess","sendMessageToChat","replyMessageToChat","getChats","getChatsSuccess","updateSelectedUser","createChat","chatData","data","currentUserId","online","chats","chat","filter","x","users","includes","selectedUser","find","selectedUserId","messageInput","now","Date","time","getHours","getMinutes","status","messages","push","sender","text","lastMessageTime","chats_data","id","splice","replyMessage","conversation","length"],"mappings":"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","sourcesContent":["import {call,put, takeLatest} from \"redux-saga/effects\";\nimport { fetchChatApi1,fetchChatApi2 } from \"../../api\";\nimport { WATCH_CHAT_MEMBERS,WATCH_CHAT_SUCCESS,SEND_MESSAGE_WATCHER,REPLY_MESSAGE_WATCHER,CREATE_CHAT_WATCHER } from \"../../redux/actionTypes\";\nimport { getMembersSuccess,sendMessageToChat,replyMessageToChat,getChats,getChatsSuccess,updateSelectedUser,createChat} from \"../../redux/chap-app/action\";\n\n\nfunction* fetchChatMemberAsyn() {\n    const chatData = yield call(fetchChatApi1);\n    yield put(getMembersSuccess(chatData.data));\n}\n\nfunction* fetchChatAsyn() {\n\n    const chatData = yield call(fetchChatApi2);\n    const currentUserId = 0;\n    yield put(getChats(chatData.data));\n    const online = true;\n    const chats = chatData.data;\n    const chat = chats.data.filter(x => x.users.includes(currentUserId));\n    const selectedUser = chats.data[0].users.find(x => x !== currentUserId);\n    yield put(getChatsSuccess(chat,selectedUser,online))\n    yield put(updateSelectedUser(selectedUser,online))\n}\n\nfunction* sendMessageAsyn({currentUserId, selectedUserId, messageInput, chats, online}) {\n\n     let chat = chats.find(x => x.users.includes(currentUserId) && x.users.includes(selectedUserId))\n     const now = new Date();\n     const time =  now.getHours() + \":\" + now.getMinutes();\n     const status=online\n     if (chat) {\n         chat.messages.push({\n             sender: currentUserId,\n             time: time,\n             text: messageInput,\n             status:true\n         });\n         chat.lastMessageTime = time;\n         chat.online = status;\n         \n         let chats_data = (chats.filter(x => x.id !== chat.id));\n         chats_data.splice(0, 0, chat)\n         yield put(getChatsSuccess(chats,selectedUserId,online))  \n    }\n    yield put(sendMessageToChat(currentUserId,selectedUserId,messageInput,chats,online))  \n}\n\nfunction* replyByUserAsyn({currentUserId, selectedUserId, replyMessage, chats, online}) {\n  \n    let chat = chats.find(x => x.users.includes(currentUserId) && x.users.includes(selectedUserId))\n    const now = new Date();\n    const time =  now.getHours() + \":\" + now.getMinutes();\n    const status= online\n    if (chat) {\n        chat.messages.push({\n            sender: selectedUserId,\n            time: time,\n            text: replyMessage,\n            status:true\n        });\n        chat.lastMessageTime = time;\n        chat.online = status;\n        let chats_data = (chats.filter(x => x.id !== chat.id));\n        chats_data.splice(0, 0, chat)\n\n        yield put(getChatsSuccess(chats_data,selectedUserId,online));\n    }\n    yield put(replyMessageToChat(currentUserId, selectedUserId, replyMessage, chats, online));\n}\n\nfunction* createNewChatAsyn({currentUserId, selectedUserId, chats}) {\n\n    yield put(createChat(currentUserId, selectedUserId, chats))\n    let conversation = {\n        id: chats.length + 1,\n        users: [currentUserId, selectedUserId],\n        lastMessageTime: \"-\",\n        messages: []\n    };\n    chats.splice(0, 0, conversation)\n    yield put(getChatsSuccess(chats,selectedUserId))\n}\n\nexport function* WatcherChatApp() {\n    yield takeLatest(WATCH_CHAT_MEMBERS,fetchChatMemberAsyn)\n    yield takeLatest(WATCH_CHAT_SUCCESS,fetchChatAsyn)\n    yield takeLatest(SEND_MESSAGE_WATCHER,sendMessageAsyn)\n    yield takeLatest(REPLY_MESSAGE_WATCHER,replyByUserAsyn)\n    yield takeLatest(CREATE_CHAT_WATCHER, createNewChatAsyn)\n}\n\n\n"]},"metadata":{},"sourceType":"module"}